"""
Задание 3.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

# первое решение O(n log n)

my_dict = {'momo': 12000, 'vip': 7000, 'mts': 350, '2gis': 3400}        # O(1)
j = 0                                                                   # O(1)
for i in sorted(my_dict.items(), key=lambda kv: kv[1], reverse=True):   # O(n log n) наихудший вариант
    j += 1                                                              # O(1)
    if j > 3:                                                           # O(1)
        break
    print(f'{j} {i}')


# второе решение O(n)

my_dict = {'momo': 12000, 'vip': 7000, 'mts': 350, '2gis': 3400}        # O(1)
best_comp = {}                                                          # O(1)

while len(best_comp) < 3:                                               # O(1)
    max_value = 0                                                       # O(1)
    for key, value in my_dict.items():                                  # O(n)
        if max_value < value:                                           # O(1)
            max_value = value                                           # O(1)
            key_max_value = key                                         # O(1)
    my_dict.pop(key_max_value)                                          # O(1)
    best_comp.setdefault(key_max_value, max_value)                      # O(1)

print(best_comp)

"""Я не уверен, но второе решение, кажется, эфективнее по сложности O(). Так как
нужно вывести только 3 компании ( 3n), а не все отсортировать ((n^2) второе решение)
    что эфективнее, чем встроенный sorted"""
