"""
Задание 5. На закрепление навыков работы со стеком
Реализуйте структуру "стопка тарелок".
Мы можем складывать тарелки в стопку и при превышении некоторого значения
нужно начать складывать тарелки в новую стопку.
Структура должна предусматривать наличие нескольких стеков.
Создание нового стека происходит при достижении предыдущим
стеком порогового значения.
После реализации структуры, проверьте ее работу на различных сценариях.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
--реализуйте по аналогии с примером, рассмотренным на уроке
--создание нового стека можно реализовать добавлением новой пустой стопки
в массив стопок (lst = [[], [], [], [],....]) либо созданием объекта
класса-стек в самом же классе.
"""


class PlateStackClass:
    def __init__(self, max_size):
        self.elems = [[]]  # вывод содержимого
        self.max_size = max_size


    def is_empty(self):
        return self.elems == [[]]  # тру если пустой, фолс если не пустой

    def push_in(self, el):
        """Предполагаем, что верхний элемент стека находится в конце списка"""
        if len(self.elems[-1]) < self.max_size:
            self.elems[-1].append(el)
        else:
            self.elems.append([])  # добавить элемент в конец
            self.elems[-1].append(el)

    def pop_out(self):  # забирает последний элемент и удаляет из стека
        result = self.elems[-1].pop()  # отвечает за забор одного элемента с конца в буфер
        if len(self.elems[-1]) == 0:  # удаляет пустой список в стеке
            self.elems.pop()
        return result

    def get_val(self):  # Получить последний элемент из последнего списка
        return self.elems[-1][-1]

    def get_list_val(self):
        return self.elems[-1]  # получить последний список  из стека

    def stack_size(self):
        elem_sum = 0
        for stack in self.elems:
            elem_sum += len(stack)
        return elem_sum  # узнать длину стека

    def stack_count(self):
        return len(self.elems)

if __name__ == '__main__':
    Plate = PlateStackClass(5)


"""скопировал ваше решение. Грокнул его. Исправил синтаксическую ошибку - self.elems = [[]] (списка не хватало)
сделал лаконичнее код, где нужно было достать последний элемент. Добавил функцию get_val, чтобы можно было получать 
одну тарелку из стопки"""