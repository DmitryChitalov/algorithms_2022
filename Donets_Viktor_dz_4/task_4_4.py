"""
Задание 4.
Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.
Сделайте профилировку каждого алгоритма через timeit
Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""

from timeit import timeit


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    elem, n = sorted([(i, array.count(i)) for i in set(array)],
                     key=lambda x: x[1])[-1]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {n} раз(а)'


array = [1, 3, 1, 3, 4, 5, 1]
print(timeit("func_1", globals=globals(), number=10000))
print(func_1())
print('!' * 25)
print(timeit("func_2", globals=globals(), number=10000))
print(func_2())
print('!' * 25)
print(timeit("func_3", globals=globals(), number=10000))
print(func_3())

"""
0.00024960000064311316
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
!!!!!!!!!!!!!!!!!!!!!!!!!
0.00024759999996604165
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
!!!!!!!!!!!!!!!!!!!!!!!!!
0.00022499999977299012
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
"""

"""
При выполнении 3 функции используем встроенные функции и list comprehension
Эти действия привели к небольшому увеличению скорости выполнения функции, но 
при запуске несколько раз видно что скорость выполнения у всех функций 
приблизительно одинакова
"""