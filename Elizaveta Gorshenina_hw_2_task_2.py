"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def calc_evens_and_odds(a_num, even_nums=0, odd_nums=0):
    if a_num == 0:
        return f'Четные цифры: {even_nums}, нечетные цифры :{odd_nums}.'
    else:
        a_digit = a_num % 10
        if a_digit % 2 == 0:
            even_nums += 1
        else:
            odd_nums += 1
        a_num //= 10
        return calc_evens_and_odds(a_num, even_nums, odd_nums)


the_num = int(input('Введите натуральное число: '))
print(calc_evens_and_odds(the_num))
