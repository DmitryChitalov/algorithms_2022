"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def qua_n(num, e=0, o=0):
    e_count = 0
    o_count = 0
    if num % 10 % 2 == 0:
        e_count = 1
    else:
        o_count = 1
    if num // 10 == 0 and e_count:
        return f'Количество четных и нечетных цифр в числе равно: {e + 1}, {o}'
    elif num // 10 == 0 and o_count:
        return f'Количество четных и нечетных цифр в числе равно: {e}, {o + 1}'
    return qua_n(num // 10, e + e_count, o + o_count)

print(qua_n(int(input('Введите число: '))))

