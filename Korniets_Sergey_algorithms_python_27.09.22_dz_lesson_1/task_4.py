"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

users = {'Ivanov': {'password': '123', 'activated': True},
         'Petrov': {'password': '123', 'activated': True},
         'Sidor': {'password': '123', 'activated': False}
         }

# Первый вариант решения
# Сложность: O(n)
def check_user_1(login, password):
    for k, v in users.items():                                                                                  # O(n)
        if k == login:                                                                                          # O(1)
            if v['password'] == password:                                                                       # O(1)
                if v['activated'] == True:                                                                      # O(1)
                    print(f'Вам разрешен доступ к ресурсу')                                                     # O(1)
                    break                                                                                       # O(1)
                else:
                    print('Ваша учетная запись не активна. Необходимо активировать учетную запись')             # O(1)
                    break                                                                                       # O(1)
            else:
                print('Доступ к ресурсу запрещен. Вы ввели неправильный пароль')                                # O(1)
                break                                                                                           # O(1)
    else:
        print(f'Доступ к ресурсу запрещен. Пользователя с логином {login} в системе не зарегистрировано')       # O(1)


# Второй вариант решения
# Сложность: O(1)
def check_user_2(login, password):
    item = users.get(login)                                                                                     # O(1)
    if item is not None:                                                                                        # O(1)
        if item['password'] == password:                                                                        # O(1)
            if item['activated'] == True:                                                                       # O(1)
                print(f'Вам разрешен доступ к ресурсу')                                                         # O(1)
            else:
                print('Ваша учетная запись не активна. Необходимо активировать учетную запись')                 # O(1)
        else:
            print('Доступ к ресурсу запрещен. Вы ввели неправильный пароль')                                    # O(1)
    else:
        print(f'Доступ к ресурсу запрещен. Пользователь с логином {login} в системе не зарегистрирован')        # O(1)



print("Аутентификация метод 1:")
check_user_1(input('Введите логин: '), input('Введите пароль: '))

print("Аутентификация метод 2:")
check_user_2(input('Введите логин: '), input('Введите пароль: '))

"""
Вывод:
второй вариант решения быстрее и эффективнее ввиду того, что у него константная сложность
"""
