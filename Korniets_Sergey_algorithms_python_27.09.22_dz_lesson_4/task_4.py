"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    numb = max(array, key=array.count)
    return f"Чаще всего встречается число {numb}, " \
           f"оно появилось в массиве {array.count(numb)} раз(а)"


print(func_1())
print(func_2())
print(func_3())

print(timeit("func_1()", globals=globals()))    # 1.4293533000018215, 1.8447107999963919, 1.558495999997831
print(timeit("func_2()", globals=globals()))    # 1.8180578000028618, 1.8360930000053486, 1.845082799998636
print(timeit("func_3()", globals=globals()))    # 1.4180172999986098, 1.4332185000021127, 1.420330200002354

"""
Вариант № 2 самый медленный, так как выполняется много дополнительных действий с созданием временного массива.
Решение № 3 с использованием встроенных методов наиболее быстрое.
Таким образом получилось ускорить решение задачи.
"""
