"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

capitals = {
    'company_1': 100000,
    'company_2': 200000,
    'company_3': 400000,
    'company_4': 500000,
    'company_5': 700000,
    'company_6': 900000,
    'company_7': 1000000,
}

# Первый вариант - суммарная сложность O(n log n)


def sorted_1(capitals):
    tar_comp = capitals.items()                            # O(1)
    tar_comp = sorted(tar_comp, key=lambda x: x[1])        # O(n log n)
    return tar_comp[-1], tar_comp[-2], tar_comp[-3]        # O(1)


# Второй вариант - суммарная сложность O(n)


def sorted_2(capitals):
    max_income = {}                                                  # O(1)
    top_capitals = dict(capitals)                                    # O(1)
    for i in range(3):                                               # O(1) (есть кол-во раз цикла)
        max_ = max(top_capitals.items(), key=lambda k_v: k_v[1])     # O(n)
        del top_capitals[max_[0]]                                    # O(1)
        max_income[max_[0]] = max_[1]                                # O(1)
    return max_income                                                # O(1)


print(sorted_1(capitals))
print(sorted_2(capitals))


# Второй вариант c O(n) эффективнее, решает задачу без сортировки

