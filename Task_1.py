"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ
Решите через рекурсию. Решение через цикл не принимается.
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def mathematics():
    a = input('Введите операцию (+, -, *, / или 0 для выхода):')
    if a == '0':
        return f'До свидания'
    try:
        b = int(input('Введите первое число:'))
        c = int(input('Введите второе число:'))
        if a == '+':
            print('Ваш результат', b + c)
        elif a == '*':
            print('Ваш результат', b * c)
        elif a == '/':
            try:
                print('Ваш результат', b / c)
            except ZeroDivisionError:
                print('Ай! Плохо знаешь математику! На 0 делить нельзя!!! Попробуем снова?')
        elif a == '-':
            print('Ваш результат', b - c)
    except ValueError:
            print('Пожалуйста, вводите только числа')
    return mathematics()
print(mathematics())