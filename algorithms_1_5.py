"""
Задание 5. На закрепление навыков работы со стеком
Реализуйте собственную класс-структуру "стопка тарелок".
Мы организуем складывать тарелки в стопку и при исключении значений
нужно начать складывать тарелки в новую стопку.
Структура должна предусмотреть наличие нескольких стопок.
Создание новой стопки происходит при изменении
стеком порогового значения.
После реализации структуры проверьте ее работу на различных сценариях.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
--реализуйте по аналогии с привлечением, рассмотрением на уроке
--создание новой стопки можно реализовать добавлением нового пустого массива
в массивок (lst = [[], [], [], [],....]).
"""

class Plates:
    def __init__(self, limit: int):
        self.plates = [] #O(1)
        self.limit = limit

    def is_empty(self):
        # return self.plates == [] #O(N)
        return len(self.plates) == 0 #O(1) Решил оптимизировать алгоритм из конспекта урока

    def put_in(self, amount: int):
        if self.is_empty() or len(self.plates[-1]) == limit: #O(1)
            self.plates.append([]) #O(1)
        while amount > 0: #O(N)
            if len(self.plates[-1]) < self.limit: #O(1)
                self.plates[-1].append(1) #O(1)
                amount -= 1
            else:
                self.plates.append([]) #O(1)


test_class = Plates(10)
test_class.is_empty()
test_class.put_in(25)
print(*test_class.plates, sep='\n')

# Общая сложность алгоритма составила O(N), что и понятно: мы производим с каждой тарелкой операцию
# размещения её в стопке.


