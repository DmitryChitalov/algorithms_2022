"""
Задание 1.
Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива
Сделайте замеры времени выполнения кода с помощью модуля timeit
Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры
ОБЯЗАТЕЛЬНО! Добавьте аналитику: что вы сделали и какой это принесло эффект
"""
from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


# Сделал 1000 замеров масива с 1000 элементами получил 0.287 время выполнении функции
num = list(range(1000))
print(timeit("func_1(num)", globals=globals(), number=1000))
print(func_1(num))


# Изменил функциию, использовал лист comprehension, и замерил время выполнения функции


def func_2(nums):
    new_arr = [i for i in range(len(nums)) if nums[i] % 2 == 0]
    return new_arr


print(timeit('func_2(num)', globals=globals(), number=1000))
print(func_2(num))


''' Замеры 1000 раз тогоже масива с 1000 элементами показали, что время выполнения функции уменьшилось,
 и теперь составляют  0.281, это примерно в 1.5 раза быстрее чем было.
 Добиться увеличения скорости удалось из за использования для наполнения масива "лист comprehension"
 '''
