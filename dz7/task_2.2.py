"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
2) без сортировки
сделайте замеры на массивах длиной 10, 100, 1000 элементов
"""
from random import randint
from timeit import timeit

m_1 = randint(0, 10)
lst_1 = [randint(0, 100) for _ in range(2 * m_1 + 1)]
m_2 = randint(100, 199)
lst_2 = [randint(-100, 100) for _ in range(2 * m_2 + 1)]
m_3 = randint(1000, 1100)
lst_3 = [randint(-100, 100) for _ in range(2 * m_3 + 1)]


def search_med(lst, m):
    n = 0
    while n != m:
        lst.remove(max(lst))
        n += 1
    return max(lst)


print('Поиск медианы без сортировки:')
print('-------------------------------------------------------')
print(f'Замер времени lst_1: {timeit("search_med(lst_1[:], m_1)", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_1)} эл.) равна: {search_med(lst_1[:], m_1)}")
print(f'Индекс медианы = {m_1}')
print('-------------------------------------------------------')
print(f'Замер времени lst_2: {timeit("search_med(lst_2[:], m_2)", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_2)} эл.) равна: {search_med(lst_2[:], m_2)}")
print(f'Индекс медианы = {m_2}')
print('-------------------------------------------------------')
print(f'Замер времени lst_3: {timeit("search_med(lst_3[:], m_3)", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_3)} эл.) равна: {search_med(lst_3[:], m_3)}")
print(f'Индекс медианы = {m_3}')
print('-------------------------------------------------------')


'''
Поиск медианы без сортировки:
-------------------------------------------------------
Замер времени lst_1: 0.0013502000001608394
Медиана масива (15 эл.) равна: 61
Индекс медианы = 7
-------------------------------------------------------
Замер времени lst_2: 0.09805299999970885
Медиана масива (215 эл.) равна: -8
Индекс медианы = 107
-------------------------------------------------------
Замер времени lst_3: 7.09304770000017
Медиана масива (2001 эл.) равна: -2
Индекс медианы = 1000
-------------------------------------------------------

Тут использовал цикл и функцию max(), из масива удалял самый большой элемент, пока длинна массива не стала равна m из,
формулы 2*m+1 (длинна масива), где m - случайное число, когда длинна масива становится равна m, то самый большой элемент,
масива и будет медианной.
Этот способ быстрее чем Гномья сортировка, так как тут не нужно переберать весь масив, а мы ведем поиск самого большого элемента,
с помощью ф-и max(), это линейная сложность O(n), что быстрее чем у гномьей (квадратичная O(n^2)),
и замеры это показали, в функции без сортировки, даже у большего масива допустимое время, но не идеальное.
'''