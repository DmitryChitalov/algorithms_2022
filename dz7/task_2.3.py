"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
3) с помощью встроенной функции поиска медианы
сделайте замеры на массивах длиной 10, 100, 1000 элементов
В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
import statistics
from random import randint
from timeit import timeit

m_1 = randint(0, 10)
lst_1 = [randint(0, 100) for _ in range(2 * m_1 + 1)]
m_2 = randint(100, 199)
lst_2 = [randint(-100, 100) for _ in range(2 * m_2 + 1)]
m_3 = randint(1000, 1100)
lst_3 = [randint(-100, 100) for _ in range(2 * m_3 + 1)]

print('Встроенная ф-я поиска медианы: ')
print('-------------------------------------------------------')
print(f'Замер времени lst_1: {timeit("statistics.median(lst_1[:])", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_1)} эл.) равна: {statistics.median(lst_1[:])}")
print(f'Индекс медианы = {m_1}')
print(sorted(lst_1))
print('-------------------------------------------------------')
print(f'Замер времени lst_2: {timeit("statistics.median(lst_2[:])", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_2)} эл.) равна: {statistics.median(lst_2[:])}")
print(f'Индекс медианы = {m_2}')
print(sorted(lst_2))
print('-------------------------------------------------------')
print(f'Замер времени lst_3: {timeit("statistics.median(lst_3[:])", globals=globals(), number=100)}')
print(f"Медиана масива ({len(lst_3)} эл.) равна: {statistics.median(lst_3[:])}")
print(f'Индекс медианы = {m_3}')
print(sorted(lst_3))
print('-------------------------------------------------------')

'''
Встроенная ф-я поиска медианы: 
-------------------------------------------------------
Замер времени lst_1: 0.00014069999997445848
Медиана масива (3 эл.) равна: 57
Индекс медианы = 1
[15, 57, 60]
-------------------------------------------------------
Замер времени lst_2: 0.0032451000006403774
Медиана масива (211 эл.) равна: 4
Индекс медианы = 105
[-99, -99, -99, -98, .... 100]
-------------------------------------------------------
Замер времени lst_3: 0.06682870000076946
Медиана масива (2159 эл.) равна: 0
Индекс медианы = 1079
[-100, -100, -100, .... 100]
-------------------------------------------------------

В этом способе используется встроенная функуия median(), и этот способ оказался самым эфективным,
он работает быстрее способа "без сортировки" O(n) сложность, и намного быстрее способа,
с использованием "Гномьей сортировки" O(n^2) сложность,
замеры это доказали.
В этом методе, функция median() показывает лучшее время и в больших масивах,
это самое лучшее решение из трех представленных.
'''
