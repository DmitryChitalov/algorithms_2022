"""
Задание 2.
Реализуйте два алгоритма.
Оба должны обеспечивать поиск минимального значения для списка.
Сложность первого алгоритма должна быть O(n^2) - квадратичная.
Сложность второго алгоритма должна быть O(n) - линейная.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
-- нельзя использовать встроенные функции min() и sort()
-- каждый из двух алгоритмов нужно оформить в виде отдельной ф-ции
-- проставьте сложности каждого выражения в двух ваших алгоритмах
"""
from random import sample


def check_1(lst_obj):
    """Функция поиск минимального значения для списка.
    Алгоритм 1: O(n^2) - квадратичная
    Сортируем массив пузырьковым методом и в качестве минимального берем 0 элемент
    """
    for i in range(len(lst_obj) - 1):
        for j in range(len(lst_obj) - i - 1):
            if lst_obj[j] > lst_obj[j + 1]:
                lst_obj[j], lst_obj[j + 1] = lst_obj[j + 1], lst_obj[j]
    el_min = lst_obj[0]
    return el_min  # О(1)


def check_2(lst_obj):
    """Функция поиск минимального значения для списка.
    Алгоритм 2: O(n) - линейная
    Проходимся по списку и для каждого элемента проверяем,
    если он меньше предыдущих, принимаем его за минимальный
    """
    el_min = lst_obj[0]
    for j in range(len(lst_obj)):  # О(n)
        if lst_obj[j] < el_min:  # О(len(j))
            el_min = lst_obj[j]  # О(1)
    return el_min  # О(1)


for j in (5, 10):
    lst = sample(range(1, 100000), j)

print(lst)
print(check_2(lst))
print(check_1(lst))
