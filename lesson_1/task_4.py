"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
# O(n) линейная

def authorization_1(login, password, accept):
    for key, value in login.items():                                        #O(n)
        if key == password:                                                 #O(1)
            if value['пароль'] == accept and value['активация']:            #O(1)
                return "Доступ разрешен"                                    #O(1)
            elif value['пароль'] == accept and not value['активация']:      #O(1)
                return "Пройдите активацию"                                 #O(1)
            elif value['пароль'] != password:                               #O(1)
                return "Пароль не верный"                                   #O(1)

    return "Учетная запись не существует"                                   #O(1)

# O(1) константная

def authorization_2(login, password, accept):
    if login.get(password):                                                                 #O(1)
        if login[password]['пароль'] == accept and login[password]['активация']:            #O(1)
            return "Доступ разрешен"                                                        #O(1)
        elif login[password]['пароль'] == accept and not login[password]['активация']:      #O(1)
            return "Пройдите активацию"                                                     #O(1)
        elif login[password]['пароль'] != accept:                                           #O(1)
            return "Пароль не верный"                                                       #O(1)
    else:
        return "Учетная запись не существует"                                               #O(1)

users = {'user_1': {'пароль': '12345', 'активация': False},
        'user_2': {'пароль': '78942', 'активация': False},
        'user_3': {'пароль': '56468', 'активация': True},
        'user_4': {'пароль': '78654', 'активация': False}
        }

print(authorization_1(users, 'user_5', '0012'))
print(authorization_2(users, 'user_2', '78942'))
""" Константная сложность занимает наименьшее время обработки кода """