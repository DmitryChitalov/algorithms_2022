"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
3) с помощью встроенной функции поиска медианы
сделайте замеры на массивах длиной 10, 100, 1000 элементов
В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

from random import randint
from statistics import median
from timeit import timeit

m = 10
fst_lst = [randint(-1000, 1000) for _ in range(2 * m + 1)]
print(timeit('median(fst_lst)', globals=globals(), number=1000))  # 0.0006

m = 100
sec_lst = [randint(-1000, 1000) for _ in range(2 * m + 1)]
print(timeit('median(sec_lst)', globals=globals(), number=1000))  # 0.0073

m = 1000
thrd_lst = [randint(-1000, 1000) for _ in range(2 * m + 1)]
print(timeit('median(thrd_lst)', globals=globals(), number=1000))  # 0.189


"""
Встроенная функция median работает быстрее всего из-за её оптимизированности
Далее по скорости выполнения идёт сортировка кучей, 
т.к. на больших массивах она работает быстрее метода 'без сортировки'
"""