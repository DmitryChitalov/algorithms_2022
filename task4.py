"""
Задание 4.
Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.
Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.
Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

##############################################################################

# # Сложность O(1)
# def ident_1(my_dict, login, password):
#     if my_dict.get(login) == None:                                                  # O(1)
#         return print('Пользователь с указанным логином не найден.')                 # O(1)
#     elif my_dict.get(login)[1] == 0 and my_dict.get(login)[0] == password:          # O(1)
#         active = input('УЗ не активирована, желаете ее пройти? (y/n): ')            # O(1)
#         if active == 'y':                                                           # O(1)
#             return print('Активация пройдена, вы допущены к ресурсу!')              # O(1)
#         else:
#             return print('Активация не пройдена, вы не допущены к ресурсу!')        # O(1)
#     elif my_dict.get(login)[1] == 1 and my_dict.get(login)[0] == password:          # O(1)
#         return print('Вы допущены к ресурсу!')                                      # O(1)

##############################################################################

# Сложность O(N)
def ident_2(my_dict, login, password):
    for i in my_dict.keys():                                                                # O(N)
        if i == login:                                                                      # O(1)
            if my_dict.get(login)[1] == 0 and my_dict.get(login)[0] == password:            # O(1)
                active = input('УЗ не активирована, желаете ее пройти? (y/n): ')            # O(1)
                if active == 'y':                                                           # O(1)
                    return print('Активация пройдена, вы допущены к ресурсу!')              # O(1)
                else:
                    return print('Активация не пройдена, вы не допущены к ресурсу!')        # O(1)
            elif my_dict.get(login)[1] == 1 and my_dict.get(login)[0] == password:          # O(1)
                return print('Вы допущены к ресурсу!')                                      # O(1)
    return print('Пользователь с указанным логином не найден.')                             # O(1)


my_dict = {'A1': ['buYG7!', 0], 'B1': ['iriIH9)', 1], 'C1': ['09Njl%', 1], 'D1': ['ko^ml0', 0], 'E1':  ['98_huUg!', 1]}


login = input('Введите логин: ')
password = input('Введите пароль: ')
# ident_1(my_dict, login, password)
ident_2(my_dict, login, password)