"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
3) с помощью встроенной функции поиска медианы
сделайте замеры на массивах длиной 10, 100, 1000 элементов
В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
"""
С помощью встроенной функции  median в numpy
Сложность: О(n)
Сортировка 21 элементов за 0.021541499998420477
Сортировка 201 элементов за 0.036380200006533414
Сортировка 2001 элементов за 0.2024054000066826
Несмотря на аналогичную сложность, операция выполняется быстрее на порядок (приблизительно в 10 раз) по сравнению с п.1. 
"""

from random import randint
from timeit import timeit
from numpy import median


for i in range(1, 4):
    n = 2 * 10 ** i + 1
    orig_list = [randint(-100, 100) for _ in range(n)]
    print(f'Сортировка {n} элементов за {timeit("median(orig_list[:])", globals=globals(), number=1000)}')
