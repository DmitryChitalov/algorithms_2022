"""
Задание 2.

Реализуйте два алгоритма.

Оба должны обеспечивать поиск минимального значения для списка.

Сложность первого алгоритма должна быть O(n^2) - квадратичная.

Сложность второго алгоритма должна быть O(n) - линейная.


Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
-- нельзя использовать встроенные функции min() и sort()
-- каждый из двух алгоритмов нужно оформить в виде отдельной ф-ции
-- проставьте сложности каждого выражения в двух ваших алгоритмах
"""

from random import sample


##############################################################################
def min_n_2(lst_obj):
    """Функция возвращает минимальное значениев списке.
    Алгоритм 1:
    Проходимся по списку несколько раз и путем попарных сравнений сортируем
    значения в списке по возрастанию (пузырьковая сортировка).
    Минимальным значением будет первое значение в списке.
    Сложность: O(n^2)
    """
    for i in range(len(lst_obj) - 1):                                   # О(n)
        for j in range(len(lst_obj) - i - 1):                           # О(n)
            if lst_obj[j] > lst_obj[j+1]:                               # O(1)
                lst_obj[j], lst_obj[j+1] = lst_obj[j+1], lst_obj[j]     # O(1)
    return lst_obj[0]                                                   # O(1)

##############################################################################
def min_n(lst_obj):
    """Функция возвращает минимальное значениев списке.
    Алгоритм 2:
    В дополнительную переменную сохраняется первое значение в списке.
    Проходимся по списку и сравниваем значение в данной переменной со
    значением каждого элемента в списке: если значение очередного элемента
    списка меньше значения переменной, сохраняем в переменную значение
    данного элемента, иначе - значение в переменной не меняется.
    После прохождения всего списка в переменной будет находится
    минимальное значение в списке.
    Сложность: O(n)
    """
    min_val = lst_obj[0]                # O(1)
    for i in range(1, len(lst_obj)):    # O(n)
        if lst_obj[i] < min_val:        # O(1)
            min_val = lst_obj[i]        # O(1)
    return min_val                      # O(1)


##############################################################################
"""Тестирование"""

# Генерация списка
lst = sample(range(-100, 100), 10)

print(lst)
print(min_n_2(lst))
print(min_n(lst))