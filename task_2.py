"""
Задание 2.

Реализуйте два алгоритма.

Оба должны обеспечивать поиск минимального значения для списка.

Сложность первого алгоритма должна быть O(n^2) - квадратичная.

Сложность второго алгоритма должна быть O(n) - линейная.


Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
-- нельзя использовать встроенные функции min() и sort()
-- каждый из двух алгоритмов нужно оформить в виде отдельной ф-ции
-- проставьте сложности каждого выражения в двух ваших алгоритмах
"""


###################################################################
def get_min_number(lst):
    """
    Алгоритм 1
    Сложность: O(n^2) - квадратичная
    """
    min_number = lst[0]                                      # O(1) - Константная
    for i in lst:                                            # O(n) - Линейная
        for j in range(lst.index(i) + 1, len(lst) - 1, 1):   # O(n) - Линейная
            if min_number > lst[j]:                          # O(len(...)) - Линейная
                min_number = lst[j]                          # O(1) - Константная
    return min_number                                        # O(1) - Константная


#####################################################################
def get_min_number_2(lst):
    """
    Алгоритм 2
    Сложность: O(n) - Линейная
    """
    min_number_2 = lst[0]                                    # O(1) - Константная
    for i in lst:                                            # O(n) - Линейная
        if i < min_number_2:                                 # O(len(...)) - Линейная
            min_number_2 = i                                 # O(1) - Константная
    return min_number_2                                      # O(1) - Константная


first_list = [100, 50, 3, 4, 23, 10]

print(get_min_number(first_list))
print(get_min_number_2(first_list))
