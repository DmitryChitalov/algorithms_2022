"""
Задание 3.

Приведен код, формирующий из введенного числа
обратное по порядку входящих в него
цифр и вывести на экран.

Сделайте профилировку каждого алгоритма через timeit

Обязательно предложите еще свой вариант решения!

Сделайте вывод, какая из четырех реализаций эффективнее и почему!
"""

##############################################################################
"""
- Реализация 1: из-за рекурсии и наличия промежуточных арифметических операций
данная реализация является самой неэффективной.

- Реализация 2: в отличие от реализации 1 вместо рекурсии используется цикл, 
но также имеются промежуточные арифметические операции, поэтому данная реализация
является более эффективной, чем реализация 1, но менее эффективной по сравнению
с реализациями 3 и 4.

- Реализация 3: является самой эффективной, т.к. использует исключительно
возможности срезов и не делает дополнительных вычислений, кроме преобразования
числа в строку.

- Реализация 4: является менее эффективной, чем реализация 3, т.к. делает почти
то же самое, что и реализация 3, только использует возможности срезов для списков,
не для строк, но дополнительно производит преобразование строки в список и списка
в строку, на что уходит дополнительное время.

Таким образом ТОП реализаций выглядит следующим образом:
1. Реализация 3
2. Реализация 4
3. Реализация 2
4. Реализация 1

"""

from timeit import timeit
from random import randint


# Комментарий: если на конце числа будет 0, то функция его потеряет
def revers_1(enter_num, revers_num=0):
    if enter_num == 0:
        return revers_num  # добавил revers_num
    else:
        num = enter_num % 10
        revers_num = (revers_num + num / 10) * 10
        enter_num //= 10
        return revers_1(enter_num, revers_num)  # добавил return


# Комментарий: если на конце числа будет 0, то функция его потеряет
def revers_2(enter_num, revers_num=0):
    while enter_num != 0:
        num = enter_num % 10
        revers_num = (revers_num + num / 10) * 10
        enter_num //= 10
    return revers_num


def revers_3(enter_num):
    enter_num = str(enter_num)
    revers_num = enter_num[::-1]
    return revers_num


def revers_4(enter_num):
    return ''.join(reversed(list(str(enter_num))))


num = randint(10_000_000, 1_000_000_000)

print(f'Исходное число: {num}')
print(f'Реализация 1: {int(revers_1(num)):>10} за {timeit("revers_1(num)", globals=globals(), number=10_000):.7f}')
print(f'Реализация 2: {int(revers_2(num)):>10} за {timeit("revers_2(num)", globals=globals(), number=10_000):.7f}')
print(f'Реализация 3: {revers_3(num):>10} за {timeit("revers_3(num)", globals=globals(), number=10_000):.7f}')
print(f'Реализация 4: {revers_4(num):>10} за {timeit("revers_4(num)", globals=globals(), number=10_000):.7f}')

