"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
# Урок 1, задание 3

from pympler.asizeof import asizeof
from json import loads, dumps

# исходное решение
def key_max(dict_in): # O(n)
# возвращает ключ наибольшего    
    value_max = dict_in[list(dict_in.keys())[0]] # O(1)
    for key in dict_in.keys(): # O(n)
        value = dict_in[key] # O(1)
        if value > value_max: # O(1)
            res = key # O(1) 
            value_max = value # O(1
    return res # O(1)

def list_1(dict_in): # O(n)
# проверка исходных данных
    if len(dict_in) <= cntmax: # O(1)
        print(f'В хранилище не более {cntmax} компаний!') # O(1)
        return # O(1)
# cntmax раз сделать:
# найти наибольший, исключить его
    dict_ = dict_in.copy() # O(n)
    for i in range(cntmax): # O(n)
        res = key_max(dict_) # O(n)
        print(i + 1, res) # O(1)
        dict_[res] = -111111111 # O(1)

cntmax = 3
dict1 = {"name1": 134, "name2": 12345, "name3": 1234, "name4": 12346, "name5": 1234, "name6": 3456}
print('Размер dict:', asizeof(dict1))
list_1(dict1)
'''
Размер dict: 472
1 name4
2 name2
3 name6
'''

# Оптимизация - исходный массив задан в json
cntmax = 3
dict_json = '{"name1": 134, "name2": 12345, "name3": 1234, "name4": 12346, "name5": 1234, "name6": 3456}'
print('Размер json:', asizeof(dict_json))
list_1(loads(dict_json))
'''
Размер json: 120
1 name4
2 name2
3 name6
'''

# Результат - уменьшился объём использованной памяти
