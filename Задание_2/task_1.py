"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
def action_input():
    action = input('Действие (+, -, *, /, 0-конец): ')
    if action in ('0', '+', '-', '*', '/'):
        return action
    else:
        print('Недопустимое действие, повторите ввод!')
        return action_input()
    
def recurs():
    action = action_input()
    if action == '0':
        return
    value1 = float(input('1-й операнд: '))
    value2 = float(input('2-й операнд: '))
    if action == '+':
        print('Результат =', value1 + value2)
    elif action == '-':
        print('Результат =', value1 - value2)
    elif action == '*':
        print('Результат =', value1 * value2)
    else:
        if value2 == 0:
            print('На 0 делить нельзя!')
        else:
            print('Результат =', value1 / value2)
    recurs()

recurs()
