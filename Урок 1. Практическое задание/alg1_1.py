# Задание 1.
# Для каждой из трех функций выполнить следующее:
#1) для каждого выражения вместо !!! укажите сложность.
#2) определите сложность алгоритма в целом (Сложность: !!!).
#Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
#-- Сложность нужно указать только там, где есть !!!
#- Сложности встроенных функций нужно искать
 #   в таблицах (материалы к уроку).


import random


##############################################################################
def check_1(lst_obj):
    """Функция должна создать множество из списка.
    Алгоритм 1:
    Создать множество из списка
    Сложность: o(n).
    """
    lst_to_set = set(lst_obj)  # o(n) зависит от длины
    return lst_to_set  # o(1)


##############################################################################
def check_2(lst_obj):
    """Функция должная вернуть True, если все элементы списка различаются.
    Алгоритм 2:
    Проходимся по списку и для каждого элемента проверяем,
    что такой элемент отстутствует
    в оставшихся справа элементах
    Сложность: o(n^2).
    """
    for j in range(len(lst_obj)):          # o(n) для in + o(n) для range(len)
        if lst_obj[j] in lst_obj[j+1:]:    # o(n) для in + o(n)для среза
            return False                   # o(1)
    return True                            # o(1)


##############################################################################
def check_3(lst_obj):
    """Функция должная вернуть True, если все элементы списка различаются.
    Алгоритм 3:
    Вначале выполним для списка сортировку, далее, сравниваем элементы попарно
    Если присутствуют дубли, они будут находиться рядом.
    Сложность: o(n log n)
    """
    lst_copy = list(lst_obj)                 # o(n) от длины
    lst_copy.sort()                          # o(n log n)
    for i in range(len(lst_obj) - 1):        # o(n) для in +o(1) для len
        if lst_copy[i] == lst_copy[i+1]:     # o(1)
            return False                     # o(1)
    return True                              # o(1)


for j in (50, 500, 1000, 5000, 10000):
    # Из 100000 чисел возьмем 'j' случайно выбранных
    # Всего 10 тыс. чисел
    lst = random.sample(range(-100000, 100000), j)

print(check_1(lst))
print(check_2(lst))
print(check_3(lst))
