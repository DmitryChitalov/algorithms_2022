"""
Задание 2.
Реализуйте два алгоритма.
Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.
Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.
Не забудьте указать сложность каждого из двух алгоритмов. Для лучшего закрепления темы
можете определить и указать сложность еще и у каждого выражения этих двух алгоритмов.
Примечание:
Прошу вас внимательно читать ТЗ и не забыть выполнить все пункты.
Постарайтесь не использовать ф-ции min() и sort() и другие ф-ции!
Подход должен быть максимально алгоритмическим.
"""

# сложность O(n)
f_lst = [int(input()) for y in range(0, int(input()))]  # O(n)


def get_min(lst):
    value_min = f_lst[0]  # O(1)
    for value1 in f_lst:  # O(n)
        value_min = value1 if value_min > value1 else value_min  # O(1), O(len...))

    print(value_min)  # O(1)


get_min(f_lst)

# Сложность O(n**2)
f_lst = [int(input()) for y in range(0, int(input()))]  # O(n)


def get_min_2(lst):
    min_number_2 = lst[0]  # O(1)
    for i in lst:  # O(n)
        for j in range(lst.index(i) + 1, len(lst) - 1, 1):  # O(n)
            if min_number_2 > lst[j]:  # O(len(lst[j])
                min_number_2 = lst[j]  # O(1)
    return min_number_2  # O(1)


print(get_min_2(f_lst))
