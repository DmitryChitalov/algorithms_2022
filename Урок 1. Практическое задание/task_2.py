"""
Задание 2.

Реализуйте два алгоритма.

Оба должны обеспечивать поиск минимального значения для списка.

Сложность первого алгоритма должна быть O(n^2) - квадратичная."""


def max_1(lst_obj: list):
    """
    Функция принимает в себя список значений. Выполняет сортировку пузырьком
    И возвращает крайнее правое значение отсортированного списка
    """
    for i in range(len(lst_obj) - 1):  # Перебор O(n)
        for j in range(len(lst_obj) - 1):  # Перебор O(n)
            if lst_obj[j] > lst_obj[j+1]:  # Сравнение элемента O(1)
                lst_obj[j], lst_obj[j+1] = lst_obj[j+1], lst_obj[j]  # Присвоение O(1)
    return lst_obj[-1]  # O(1).


"""Сложность второго алгоритма должна быть O(n) - линейная."""


def max_2(lst_obj):
    """
    Функция принимает в себя список значений. В качестве минимального присваивается первое значение списка.
    В цикле сравнивается каждое значение списка с минимальным и если очередное значение меньшие менимального присваивает
     минимальному значению очередное и возвращает минимальное значение
    """
    min_val = lst_obj[0]  # Присваивание 0(1)
    for i in lst_obj:  # Перебор 0(n)
        if i < min_val:  # Сравнение элемента 0(1)
            min_val = i  # Присваивание 0(1)
    return min  # 0(1)


"""
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
-- нельзя использовать встроенные функции min() и sort()
-- каждый из двух алгоритмов нужно оформить в виде отдельной ф-ции
-- проставьте сложности каждого выражения в двух ваших алгоритмах
"""
