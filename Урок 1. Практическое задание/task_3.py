"""
Задание 3.

Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


def sort_0(data):  # O(n log n)
    sort_data = {}  # O(1)
    sort_keys = sorted(data, key=data.get, reverse=True)[0:3]  # O(n log n + 3)

    for k in sort_keys:  # O(n)
        sort_data[k] = data[k]  # O(1)

    return sort_data  # O(1)


def sort_1(data):  # O(n log n)
    sort_tuple = sorted(data.items(), key=lambda x: x[1], reverse=True)  # O(n log n)
    sort_data = dict(sort_tuple[0:3])  # Сложность операции зависит от количества аргументов O(len(...)) или O(n).

    return sort_data  # O(1)


data_c = {
    'Dell': 1000000,
    'Samsung': 50000000,
    'Apple': 100000000,
    'Xiaomi': 451555522,
    'Lenovo': 4875126465,
    'Google': 47952265922
}

print(sort_0(data_c))
print(sort_1(data_c))
