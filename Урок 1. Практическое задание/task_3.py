"""
Задание 3.

Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

"""
Вариант нумеро уно: храним данные в словаре, где ключ - название компании, значение - ее прибыль
"""

money_dict = {'yandex': 10000, 'amazon': 20000, 'google': 30000, 'netflix': 25000}

# решение:

temp_num_1 = 0    # O(1)
for key in money_dict:  # O(n)
    if money_dict[key] > temp_num_1:  # O(2) (извлекаем по ключу + оператор сравнения)
        temp_num_1 = money_dict[key]  # O(2) (извлекаем по ключу + оператор присваивания)
        max_key = key   # O(1)
print(f'Вариант 1. Самая прибыльная компания {max_key} '
      f'c годовым доходом {temp_num_1}')   # Вывод в примере не учитываю

# Итоговая сложность O(n)

"""
Вариант №2: данные храним в " двухмерном" массиве - список, елементами которого бодут являться списки  с названием 
компании и ее доходом
"""

money_list = [['yandex', 10000], ['amazon', 20000], ['google', 30000], ['netflix', 25000]]

# решение:

temp_num_2 = 0
for n in range(len(money_list)):
    """
    В данном примере мы точно знаем, что в подсписке с нулевым индексом зранится название компании
    с первым индексом - доход, по этому итоговая сложность алгоритма будет составлять те же О(n)
    Но, если подсписок придеться перебирать и анализировать его содержимое, то сложность алгоритма возрастет до
    O(n*j*k) где j - длинна подсписка, k - условное количество операций сравнения(присваивания) которые мы затратим при
    анализе подсписка. При таком варианте сложность возрастает критически.  
    """
    if money_list[n][1] > temp_num_2:
        temp_num_2 = money_list[n][1]
        company = money_list[n][0]
print(f'Вариант 2. Самая прибыльная компания {company} '
      f'c годовым доходом {temp_num_2}')  # Вывод в примере не учитываю

