"""
Задание 3.

Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


def sort_compani_1(lst):
    """Функция реализуйет поиск трех компаний с наибольшей годовой прибылью.

    Решение 1:
    Присваиваем переменной отсортированные с помощью ф-ции sorted и метода get данные о компаниях в порядке убывания.
    Возвращаем срез первых трёх компаний.

    Сложность: O(n log n).
    """
    sort_values = sorted(lst, key=lst.get, reverse=True)  # O(n log n)
    return sort_values[:3]  # O(n)


def sort_compani_2(lst):
    """Функция реализуйет поиск трех компаний с наибольшей годовой прибылью.

       Решение 2:
       Копируем данные о компаниях.
       Присваиваем переменной пустой список. С помощью цикла делаем 3 итерации,
       добавляя в пустой список название компаний с максимальным доходом и
       удаляя эти компании из скопированных данных.
       Возвращаем заполненый список с названием компаний с самым большим доходом.

       Сложность: O(n).
       """
    lst_copy = lst.copy()  # O(n)
    max_values = []
    for i in range(3):  # O(1)
        max_values.append(max(lst_copy, key=lst_copy.get))  # O(n)
        lst_copy.pop(max_values[i])  # O(1)
    return max_values  # O(1)


lst_companies = {
    'Rikki': 100,
    'Vincent_A': 1000,
    'Lada': 5000,
    'Kitford': 100500,
    'Hill': 999
}

print(sort_compani_1(lst_companies))
print(sort_compani_2(lst_companies))

"""
Решение 2 эффективнее. Так как скорость алгоритмов измеряется в темпе роста количества операций
и у решения №2 темп роста количества операцй для произведения сортировки O(n), он меньше чем у решения №1 O(n log n).
"""
