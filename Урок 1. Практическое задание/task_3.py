"""
Задание 3.

Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

comp = {10000: "к1",
        300000: "к2",
        123123123123: "к3",
        1: "к4",
        50000: "к5",
        1453142134: "к6",
        14000: "к7"}


# Итоговая сложность : n + n log n + 1

def most_year_profit_1(dict):
    s = list(dict.keys())  # O(n)
    s.sort()  # O(n log n)
    print(dict.get(s[-1]), dict.get(s[-2]), dict.get(s[-3]))  # O(1)


# Итоговая сложность :  4n + 3

def most_year_profit_2(dict):
    s = list(dict.keys())  # O(n)
    a = s[0]  # O(1)
    while len(s) != 3:  # O(1)
        for el in s:  # O(n)
            if el < a:  # O(1)
                a = el  # O(1)
        s.remove(a)  # O(n)
        a = s[0]  # O(1)
    print(dict.get(s[-1]), dict.get(s[-2]), dict.get(s[-3]))  # O(1)


# Итоговая сложность : 2n + 1 ==> Лучший вариант т. к. наименьшая сложность

def most_year_profit_3(dict):
    s = list(dict.keys())  # O(n)
    while len(s) != 3:  # O(1)
        s.remove(min(s))  # O(n)

    print(dict.get(s[-1]), dict.get(s[-2]), dict.get(s[-3]))  # O(1)


most_year_profit_1(comp)
most_year_profit_2(comp)
most_year_profit_3(comp)
