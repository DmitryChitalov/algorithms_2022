"""
Задание 3.
Для этой задачи
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему
Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


corporations = {'corp1': 25000, 'corp2': 8000, 'corp3': 14000, 'corp4': 12000, 'corp5': 48000, 'corp6': 1000}

# O(n*Logn)

def task_1(corp):
    corp_max = []                                    # O(1)
    corp = sorted(corp.items(), key=lambda x: x[1])  # O(n*Logn)
    for i in range(1, 4):                            # O(1)
        corp_max.append(corp[-i])                    # O(1)
    return corp_max                                  # O(1)

print(task_1(corporations))

# O(n**2)

def task_2(corp):
    corp_max = []                           # O(1)
    for i in range(3):                      # O(1)
        max_val = max(corp.values())        # O(n)
        for j in corp.items():              # O(n)
            if j[1] == max_val:             # O(1)
                break                       # O(1)
        corp.pop(j[0])                      # O(1)
        corp_max.append(j)                  # O(1)
    return corp_max                         # O(1)


print(task_2(corporations))

# эффективнее 1 решение так как сложность O(n*Logn) занимает меньше времени чем O(n**2)