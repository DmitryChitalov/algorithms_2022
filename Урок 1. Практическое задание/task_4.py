"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

# O(N) линейная
def autent(log, pas, base):
    if log in base.keys():  # O(N) линейная
        if (base[log][1] is True) and (pas == base[log][0]):  # O(1) константная
            print('Все хорошо')  # O(1)
        else:
            print('Введите правильный пароль или активируйте учетную запись')  # O(1) константная
    else:
        print('Требуется регистрация')  # O(1) константная
    return


reg = {1: ['pass1', True],  # login:[password, activation]
       2: ['pass2', False],
       3: ['pass3', False],
       4: ['pass4', True],
       5: ['pass5', True]}
autent(4, 'pass5', reg)


# O(1) Константная
def autent_3(log, pas, base):
    if base.get(log, False) is False: # O(1) константная
        print('Требуется регистрация')  # O(1) константная
    else:
        if (base[log][1] is True) and (pas == base[log][0]):  # O(1) константная
            print('Все хорошо')  # O(1) константная
        else:
            print('Введите правильный пароль или активируйте учетную запись')  # O(1) константная
    return


reg = {1: ['pass1', True],  # login:[password, activation],
       2: ['pass2', False],
       3: ['pass3', False],
       4: ['pass4', True],
       5: ['pass5', True]}  # O(len(reg)) линейная
autent_3(4, 'pass4', reg)
# второе решение эффективнее потому, что не производится перебор всех ключей словаря при сравнении с введенным ключом.