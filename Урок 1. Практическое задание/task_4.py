"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


def autification(user, password):  # Общая сложность O(1)
    key = f'{user},{password}'  # O(1)
    status = database.get(key, False)  # O(1)
    if status:  # O(1)
        if status == 'active':  # O(1)
            return f'Добро пожаловать {user} !'  # O(1)
        else:  # O(1)
            return f'{user}, вам нужно пройти активацию аккаунта!' # O(1)
    else:  # O(1)
        return f'Пользователь не найден или введен неправильный пароль.'  # O(1)


def autification_2(user, password):  # Общая сложность O(N)
    key = f'{user},{password}'  # O(1)
    for k, v in database.items():  # O(N)
        if k == key:  # O(1)
            if v == 'active':  # O(1)
                return f'Добро пожаловать {user} !'  # O(1)
            else:  # O(1)
                return f'{user}, вам нужно пройти активацию аккаунта!'  # O(1)
    return f'Пользователь не найден или введен неправильный пароль.'  # O(1)


if __name__ == '__main__':

    database = {
        'ura,123': 'active',
        'dima,567': 'non active',
        'misha,432': 'active'
    }

print(autification('ura', 123))
print(autification('dima', 567))
print(autification('vasya', 567))
print(autification('musha', 321))
print(autification_2('ura', 123))
print(autification_2('dima', 567))
print(autification_2('vasya', 567))
print(autification_2('musha', 321))

"""
Первое решение эффективнее, тк общая сложность решения 1: O(1),
а сложность решения 2: O(N).
"""
