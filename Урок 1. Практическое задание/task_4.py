"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

USERS = {'user_1': {'user_login': 'tomilov.alex@gmail.com',
                    'user_password': 123,
                    'is_active': True},
         'user_2': {'user_login': 'ildar.gimadeev@mail.ru',
                    'user_password': 123,
                    'is_active': False}
         }


def user_check_1(users, user_login, user_password):
    """
    Функция проверки пользователя:
    сложность линейная O(n)
    """
    user_active = {'user_login': user_login, 'user_password': user_password, 'is_active': True}
    access = True if user_active in users.values() else False
    return access


if __name__ == '__main__':
    print(user_check_1(USERS, 'tomilov.alex@gmail.com', 123))
    print(user_check_1(USERS, 'ildar.gimadeev@mail.ru', 123))

# напрашиваются декораторы, но не успею разобратья до занятия
