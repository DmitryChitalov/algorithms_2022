"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

some_dict = {'emasevenn@7' : ['8439923', True], 'anzor@832' : ['433234', True], 'reiow@76372' : ['654543', False]}


# Вариант 1. Сложность О(n)

user_name = input('Введите имя пользователя: ')      
if user_name in some_dict:                                # O(n)
    if some_dict[user_name][-1] == False:                 # O(1)
        print('Пройдите активацию!')
    else:
        print(f'Welcome, {user_name}')


# Вариант 2. Сложность О(n)

not_active = {}
for i in some_dict.items():                              # O(n)
    if i[1][1] == False:                                 # O(n)
        not_active[i[0]] = i[1]                          # O(1)

user_name = input('Введите имя пользователя: ') 
if user_name in not_active:                              # O(1)
    print('Пройдите активацию!')                         # O(1)
else: 
    print(f'Welcome, {user_name}')                       # O(1)
        



'''
Я думаю, что 1-й варинат лучше, так как считаю это решением в лоб, наиболее легким, и без создания новых списков
'''