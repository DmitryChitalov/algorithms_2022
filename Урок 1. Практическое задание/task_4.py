"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
# общая сложность данного решения O(n)
user_data = {'user1': ['pass1', 'active'],
             'user2': ['pass2', 'non_active'],
             'user3': ['pass3', 'active']}


def auth(auth_dict, login, password):
    for key, val in auth_dict.items():
        if key == login:
            if password == val[0] and val[1] == 'active':
                return 'Вы допущены к ресурсу, можете продолжать работу!'
            elif password != val[0]:
                return 'Неверный пароль, попробуйте еще раз!'
            elif val[1] == 'non_active':
                return 'Пожалуйста, активуруйте учетную запись!'

    return 'Такого пользователя не существует, пройдите регистрацию!'


input_login = input('Введите логин: ')
input_password = input('Введите пароль: ')
print(auth(user_data, input_login, input_password))

# этот вариант лучший