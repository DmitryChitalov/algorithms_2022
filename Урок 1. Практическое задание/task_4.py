"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

access_base = {'alex':['12345678', 1],
               'dima':['12344321', 0],
               'nekit':['13680', 1]}

access_base_two = [('alex', '12345678', 1), ('dima', '12344321', 0), ('nekit', '13680', 1)]


# по моему мнению в целом сложность функции O(1)
def access_check(name):
    if name in access_base:                 # O(1)
        if access_base[name][1] == 1:       # O(1)
            print('Доступ разрешён')
        else:
            print('Ваша учётная запись не активирована, пройдите активацию')
    else:
        print('Пройдите регистрацию на портале')

access_check('nekit')

# второе решение не успел реализовать(