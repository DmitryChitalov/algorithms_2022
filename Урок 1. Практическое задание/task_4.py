"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

users = {
    'pmtkachev': ('0000', False),
    'anonim': ('1234', True),
    'test': ('test', False),
    'pupkin': ('vasya', True),
}


def check_user_0(name, pswd):
    # Сложность: O(n)
    for k, v in users.items():  # O(n)
        if k == name:  # O()
            if v[0] == pswd:  # O(1)
                if v[1]:  # O(1)
                    return "Access is allowed"  # O(1)
                else:
                    return "Not activated"  # O(1)
            else:
                return "Wrong password"  # O(1)


def check_user_1(name, pswd):
    # Сложность: O(1)
    user = users.get(name)  # O(1)
    if user:  # O(1)
        if user[0] == pswd:  # O(1)
            if user[1]:  # O(1)
                return "Access is allowed"  # O(1)
            else:
                return "Not activated"  # O(1)
        else:
            return "Wrong password"  # O(1)
