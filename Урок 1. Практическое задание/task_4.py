"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""


def autentificy(users, user_name, user_pass):
    for key, value in users.items():
        if key == user_name:
            if str(value['password']) == user_pass and value['activation']:
                return f'{user_name}, Добро пожаловать!'
            elif value['password'] == user_pass and value['activation'] == False:
                return f'{user_name}, Ваша учётная запись не активирована'
            elif value['password'] != user_pass:
                return f'{user_name}, Вы ввели неправильный пароль'
    return 'Такого пользователя не существует'


my_users = {
    'user_1': {'password': '1111', 'activation': True},
    'user_2': {'password': '2222', 'activation': True},
    'user_3': {'password': '3333', 'activation': False}
}

print(autentificy(my_users, 'user_1', '1111'))
print(autentificy(my_users, 'user_2', '11111'))
print(autentificy(my_users, 'user_4', '3333'))
print(autentificy(my_users, 'user_3', '3333'))
