"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
users = {'user1': {'pass': 'userone', 'registration': True},
         'user2': {'pass': 'usertwo', 'registration': True},
         'user3': {'pass': 'userthree', 'registration': False}}

#сложность: O(n)
def authorization(users, u_name, u_pass):
    if users.get(u_name):                                                               #O(1)
        if users[u_name]['pass'] == u_pass and users[u_name]['registration']:           #O(n)
            return "Доступ пользователю разрешен"                                       #O(1)
        elif users[u_name]['pass'] == u_pass and not users[u_name]['registration']:     #O(n)
            return "Пользователь не найден, пройдите регистрацию"                       #O(1)
        elif users[u_name]['pass'] != u_pass:                                           #O(n)
            return "Неверный пароль у пользователя "                                    #O(1)
    else:
        return "Нет такого пользователя"                                                #O(1)

print(authorization(users, 'user1', 'usertwo'))
print(authorization(users, 'user6', 'usertwo'))
print(authorization(users, 'user2', 'usertwo'))
print(authorization(users, 'user3', 'userthree'))