"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""

anydict = {'Ivanov': ['qwerty', True], 'Petrov': ['123', False], 'Sidorov': ['zcx123', True]}

def f4_v1(username): # линейная
    for k, v in anydict.items(): # линейная
        if k == username: # константная
            if v[1]: # константная
                print(f'Пользователь {username} допущен к ресурсу')  # константная
            else: # константная
                print(f'Пользователь {username} не может быть допущен к ресурсу.\nНеобходимо пройти активацию учетной записи') # константная


def f4_v2(username): # константная
    var = anydict.get(username) # константная
    if not var[1]: # константная
        print(f'Пользователь {username} не может быть допущен к ресурсу.\nНеобходимо пройти активацию учетной записи') # константная
    else: # константная
        print(f'Пользователь {username} допущен к ресурсу') # константная


f4_v1('Sidorov')
f4_v2('Petrov')

"""
В данном примере решение f4_v2 является более эффективным, т.к. в решении f4_v1 применение цикла является избыточным
"""