"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def mathematics(operator):
    try:
        operators = ['0', '+', '-', '*', '/']
        if operator in operators:
            if operator == '0':
                return print(f'Выход из программы')
            else:

                return print(
                    f'Ваш результат: {eval(input("Введите первое число: ") + operator + input("Введите второе число: "))}'), \
                       mathematics(input('Введите операцию (+, -, *, / или 0 для выхода): '))
        else:
            return mathematics(input('ERROR. Введите операцию из списка ("0", "+", "-", "*", "/"): '))
    except ZeroDivisionError:
        mathematics(input('ERROR. Ноль нельзя вводить в качестве делителя.\n'
                          'Введите операцию (+, -, *, / или 0 для выхода): '))


mathematics(input('Введите операцию (+, -, *, / или 0 для выхода): '))
