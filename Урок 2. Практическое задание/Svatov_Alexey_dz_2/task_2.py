"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_nums(num, even_nums=0, odd_nums=0):
    if (num // 10 != 0) or num:
        return count_nums(num // 10, even_nums + 1, odd_nums) if (num % 10) % 2 == 0 else count_nums(num // 10,
                                                                                                     even_nums,
                                                                                                     odd_nums + 1)
    else:
        return print(f'Количество четных и нечетных цифр в числе равно: ({even_nums}, {odd_nums})')


count_nums(int(input('Введите число: ')))
