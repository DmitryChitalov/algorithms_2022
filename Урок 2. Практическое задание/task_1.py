"""
–ó–∞–¥–∞–Ω–∏–µ 1.	–ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å, –≤—ã—á–∏—Ç–∞—Ç—å,
—É–º–Ω–æ–∂–∞—Ç—å –∏–ª–∏ –¥–µ–ª–∏—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞. –ß–∏—Å–ª–∞ –∏ –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–≤–æ–¥—è—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –∑–∞–≤–µ—Ä—à–∞—Ç—å—Å—è, –∞ –¥–æ–ª–∂–Ω–∞
–∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –¥–æ–ª–∂–Ω–æ
–≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø—Ä–∏ –≤–≤–æ–¥–µ —Å–∏–º–≤–æ–ª–∞ '0' –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
–≤–≤–æ–¥–∏—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π –∑–Ω–∞–∫ (–Ω–µ '0', '+', '-', '*', '/'), —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞
—Å–æ–æ–±—â–∞—Ç—å –µ–º—É –æ–± –æ—à–∏–±–∫–µ –∏ —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∑–Ω–∞–∫ –æ–ø–µ—Ä–∞—Ü–∏–∏.

–¢–∞–∫–∂–µ —Å–æ–æ–±—â–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å,
–µ—Å–ª–∏ –æ–Ω –≤–≤–µ–ª 0 –≤ –∫–∞—á–µ—Å—Ç–≤–µ –¥–µ–ª–∏—Ç–µ–ª—è.

–ü–æ–¥—Å–∫–∞–∑–∫–∞:
–í–∞—Ä–∏–∞–Ω—Ç –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è:
- —É—Å–ª–æ–≤–∏–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ - –≤–≤–µ–¥–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è +, -, *, / - –®–ê–ì –†–ï–ö–£–†–°–ò–ò
- —É—Å–ª–æ–≤–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏ - –≤–≤–µ–¥–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏—è 0 - –ë–ê–ó–û–í–´–ô –°–õ–£–ß–ê–ô

–†–µ—à–∏—Ç–µ —á–µ—Ä–µ–∑ —Ä–µ–∫—É—Ä—Å–∏—é. –í –∑–∞–¥–∞–Ω–∏–∏ –Ω–µ–ª—å–∑—è –ø—Ä–∏–º–µ–Ω—è—Ç—å —Ü–∏–∫–ª—ã.

–ü—Ä–∏–º–µ—Ä:
–í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞): +
–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: 214
–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 234
–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç 448
–í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞): -
–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: –≤–ø
–í—ã –≤–º–µ—Å—Ç–æ —Ç—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤–≤–µ–ª–∏ —Å—Ç—Ä–æ–∫—É (((. –ò—Å–ø—Ä–∞–≤—å—Ç–µ—Å—å
–í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞):
"""


class MyApp:

    def __init__(self):
        self.operand = None
        self.numbers = [0, 0]
        self.stage = 0
        self.continuous = True

    def next(self):
        self.stage += 1

    def reset(self):
        self.stage = 0

    def result(self):
        print('–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç %s' % (self.detect_operand(self.operand)))

    def set_operand(self, operand):
        """ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–ø–µ—Ä–∞–Ω–¥ """
        self.operand = operand.strip()

        if self.operand == '0':
            self.continuous = False
            return True

        if self.detect_operand(self.operand) is not None:
            return True

        return False

    def detect_operand(self, operand: str):
        """ –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–ø–µ—Ä–∞–Ω–¥–∞ –∏ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è """

        # Antipattern üëç
        if operand == '+':
            return self.numbers[0] + self.numbers[1]
        if operand == '-':
            return self.numbers[0] - self.numbers[1]
        if operand == "*":
            return self.numbers[0] * self.numbers[1]
        if operand == '/':
            return self.numbers[0] / self.numbers[1]
        self.operand = None

    def __set_number(self, index, number):
        """ –û–±—â–∏–π –º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–∏—Å–ª–∞ """
        try:
            number = int(number)
            self.numbers[index] = number
            return True
        except BaseException as e:
            return False

    def set_number1(self, number: str):
        return self.__set_number(0, number)

    def set_number2(self, number: str):
        return self.__set_number(1, number)

    @staticmethod
    def wrong_number():
        print('–í—ã –≤–º–µ—Å—Ç–æ —á–∏—Å–ª–∞ –≤–≤–µ–ª–∏ —Å—Ç—Ä–æ–∫—É (((. –ò—Å–ø—Ä–∞–≤—å—Ç–µ—Å—å')

    @staticmethod
    def wrong_operand():
        print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑...')

    def process(self):
        if self.stage == 0:
            while self.set_operand(input('–í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞):')) is False:
                self.wrong_operand()
            self.next()
        # –ó–∞–ø—Ä–æ—Å –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞
        elif self.stage == 1:
            while self.set_number1(input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:')) is False:
                self.wrong_number()
            self.next()
        # –ó–∞–ø—Ä–æ—Å –≤—Ç–æ—Ä–æ–≥–æ —á–∏—Å–ª–∞
        elif self.stage == 2:
            while self.set_number2(input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:')) is False:
                self.wrong_number()
            self.result()
            self.reset()

        if self.continuous:
            self.process()


if __name__ == '__main__':
    # while app.continuous:
    MyApp().process()

"""
    –í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞):+
    –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:2
    –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:64
    –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç 66
    –í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞):*
    –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ:2
    –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ:2
    –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç 4
    –í–≤–µ–¥–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é (+, -, *, / –∏–ª–∏ 0 –¥–ª—è –≤—ã—Ö–æ–¥–∞):0
    
    Process finished with exit code 0
"""