"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def input_number():
    while True:
        number = input('Введите целое число: ')
        if number.isdigit():
            return int(number)
        print('Вы ввели всё что угодно, но не целое число!')


def mathematics():
    action = input('Введите операцию (+, -, *, / или 0 для выхода):')
    if action == '0':
        return f'Программа заверена!'
    first_num = input_number()
    second_num = input_number()
    if action == '+':
        print(f'Ваш результат {first_num + second_num}')
    elif action == '-':
        print(f'Ваш результат {first_num - second_num}')
    elif action == '*':
        print(f'Ваш результат {first_num * second_num}')
    elif action == '/':
        try:
            print(f'Ваш результат {first_num / second_num}')
        except ZeroDivisionError:
            print('На 0 делить нельзя!')
    return mathematics()


print(mathematics())
