"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def calculator():
    operations = ['+', '-', '/', '*', '0']
    opr = input('Введите операцию (+, -, *, / или 0 для выхода)')
    if opr not in operations:
        print('Вот не надо тут изобретать, сказали же что вводить')
        calculator()
    if opr == '0':
        print('До свидания')
        return
    try:
        x = float(input('Введите первое число'))
        y = float(input('Введите второе число'))
    except ValueError:
        print('Вот не надо тут изобретать, сказали же что вводить')
        calculator()
    if opr == '+':
        print(x + y)
        calculator()
    elif opr == '-':
        print(x - y)
        calculator()
    elif opr == '*':
        print(x * y)
        calculator()
    elif opr == '/':
        if y == 0:
            print('Математику надо было в школе учить')
            calculator()
        print(x / y)
        calculator()


calculator()
