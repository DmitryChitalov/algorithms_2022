"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def arythmetics():
    sign = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if sign == '+':
        num_1 = input('Введите первое число: ')
        if num_1.isdigit():
            num_2 = input('Введите второе число: ')
            if num_2.isdigit():
                return print(f'{int(num_1) + int(num_2)}'), arythmetics()
            else:
                return print(
                    f'Второй ввод - не число, а что-то другое, точнее, {num_2}. Возврат к началу...'), arythmetics()
        else:
            return print(
                f'Первый ввод - не число, а что-то другое, точнее, {num_1}. Возврат к началу...'), arythmetics()
    elif sign == '-':
        num_1 = input('Введите первое число: ')
        if num_1.isdigit():
            num_2 = input('Введите второе число: ')
            if num_2.isdigit():
                return print(f'{int(num_1) - int(num_2)}'), arythmetics()
            else:
                return print(
                    f'Второй ввод - не число, а что-то другое, точнее, {num_2}. Возврат к началу...'), arythmetics()
        else:
            return print(
                f'Первый ввод - не число, а что-то другое, точнее, {num_1}. Возврат к началу...'), arythmetics()
    elif sign == '*':
        num_1 = input('Введите первое число: ')
        if num_1.isdigit():
            num_2 = input('Введите второе число: ')
            if num_2.isdigit():
                return print(f'{int(num_1) * int(num_2)}'), arythmetics()
            else:
                return print(
                    f'Второй ввод - не число, а что-то другое, точнее, {num_2}. Возврат к началу...'), arythmetics()
        else:
            return print(
                f'Первый ввод - не число, а что-то другое, точнее, {num_1}. Возврат к началу...'), arythmetics()
    elif sign == '/':
        num_1 = input('Введите первое число: ')
        if num_1.isdigit():
            num_2 = input('Введите второе число: ')
            if num_2.isdigit():
                if num_2 != 0:
                    return print(f'{int(num_1) // int(num_2)}, остаток от деления {int(num_1) % int(num_2)}'), arythmetics()
                else:
                    return print('На ноль делить нельзя! Возврат к началу...'), arythmetics()
            else:
                return print(
                    f'Второй ввод - не число, а что-то другое, точнее, {num_2}. Возврат к началу...'), arythmetics()
        else:
            return print(
                f'Первый ввод - не число, а что-то другое, точнее, {num_1}. Возврат к началу...'), arythmetics()
    elif sign == '0':
        return print('Завершение работы...')
    else:
        return print('Вы ввели что-то, отличное от +, -, *, / или 0! Возврат к началу...'), arythmetics()

arythmetics()