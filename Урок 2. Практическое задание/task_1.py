"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def v1():
    c = input('Введите операцию (+, -, *, / или 0 для выхода)\n')
    if c == '0':
        print('Выход из программы')
        return 0
    if not (c == '+' or c == '-' or c == '/' or c == '*' or c == '0'):
        print('Неверная операция')
        return v1()
    a, b = input('Введите числа через пробел\n').split()
    if not (a.isdigit() and b.isdigit()):
        print('Одно или оба введеных значения не являются числом')
        return v1()
    a, b = int(a), int(b)
    if c == '+':
        res = a + b
    elif c == '-':
        res = a - b
    elif c == '*':
        res = a * b
    elif c == '/':
        if b == 0:
            print('На ноль делить нельзя')
            return v1()
        else:
            res = a / b
    print(f'Ваш результат {res}')
    return v1()

v1()