"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

def complete_math_oper(firstNumb=None, secondNumb=None, oper=None):
    acceptedOpers = ['0', '+', '-', '/', '*']
    if firstNumb is None or secondNumb is None or oper is None:
        firstNumb = input('Введите первое число:')
        secondNumb = input('Введите второе число: ')
        oper = input('Введите знак операции: ')
    if oper == '0':
        print('Завершили')
        return
    elif oper not in acceptedOpers:
        oper = input('Неправильный знак операции. Введите новый:')
        complete_math_oper(firstNumb, secondNumb, oper)
    elif oper == '/' and secondNumb == '0':
        print('Деление на ноль! Попробуем снова.')
        complete_math_oper()
    else:
        print(eval(firstNumb + oper + secondNumb))
        complete_math_oper()

complete_math_oper()
