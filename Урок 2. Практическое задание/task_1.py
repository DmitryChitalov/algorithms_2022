"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def calc_recursion():
    action_dict = {'+': (lambda x,y: x+y), '-': (lambda x,y: x-y), '*': (lambda x,y: x*y),
                   '/': (lambda x,y: x/y)}
    action = input('Действие ')
    if action == '0':
        return 'Выход'
    elif action_dict.get(action) is None:
        print('Неверное действие')
        return None
    exp = (x for x in action_dict.keys() if x == action)
    num1 = int(input('Первое число '))
    num2 = int(input('Второе число '))
    if action == '/' and num2 == 0:
        print('Деление на ноль')
        return calc_recursion()
    res = action_dict[action](num1, num2)
    print(num1, *exp, num2, '=', res)
    return calc_recursion()


print(calc_recursion())