"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
import sys


def calculate():
    operator = input()
    one_number = int(input())
    two_number = int(input())

    if operator == '0':
        print("выход")
        return sys.exit(1)
    elif operator not in '0+=*/':
        print('Неверный формат данных для ввода')
        return calculate()
    elif operator == '+':
        print(one_number + two_number)
        return calculate()
    elif operator == '-':
        print(one_number - two_number)
        return calculate()
    elif operator == '*':
        print(one_number * two_number)
        return calculate()
    elif operator == '/' and two_number != 0:
        print(one_number / two_number)
        return calculate()
    elif two_number == 0:
        print('На ноль делить нельзя')
        return calculate()


calculate()
