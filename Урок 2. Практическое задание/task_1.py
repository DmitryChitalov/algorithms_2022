"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

import sys

def calculate() -> None:
    operator = input("Введите операцию (+, -, *, / или 0 для выхода): ")
    if operator.strip() not in ['+', '-', '*', '/']:
        if operator == '0':
            print('Exit')
            sys.exit()            
        print("Введенное значение не является операцией.")
        calculate()
    first_item = input("Введите первое число: ")
    if not first_item.isdigit():
        print("Введенное значение не является числом.")
        calculate()
    second_item = input("Введите второе число: ")
    if not second_item.isdigit():
        print("Введенное значение не является числом.")
        calculate()
    print(int(first_item) + int(second_item), '\n')
    return calculate()

if __name__ == '__main__':
    calculate()