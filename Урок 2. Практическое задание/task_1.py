"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
import re


def summ_num():
    n1 = int(inp_num('Введите первое число: '))
    znak = inp_znak()
    n2 = int(inp_num('Введите второе число: ', znak))
    if znak == '+':
        rez = (n1 + n2)
    if znak == '-':
        rez = (n1 - n2)
    if znak == '*':
        rez = (n1 * n2)
    if znak == '/':
        rez = (n1 / n2)
    print(f'Ваш результат : {rez}')
    return summ_num()


def inp_num(n, znak = 0):
    num = input(n)
    num_reg = re.fullmatch(r'\d+', num)
    if znak == '/' and num == '0':
        print('На ноль делить нельзя, исправьтесь')
        return inp_num(n, znak)
    if not num_reg:
        print('Вы вместо числа ввели строку')
        return inp_num(n, znak)
    return num


def inp_znak():
    znak = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if znak == '0':
        exit()
    znak_reg = re.fullmatch(r'[+-/*0]', znak)
    if not znak_reg:
        print("Исправьтесь")
        return inp_znak()
    return znak

summ_num()