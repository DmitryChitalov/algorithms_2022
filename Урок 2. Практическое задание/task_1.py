"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""
def calc():
    opr = str(input('Введите операцию (+, -, *, / или 0 для выхода): '))
    if opr == '0':
        return None
    elif opr in '+*-/':
        valstr1 = input('Введите первое число: ')
        valstr2 = input('Введите второе число: ')
        if valstr1.isdigit() and valstr2.isdigit():
            try:
                val1 = int(valstr1)
                val2 = int(valstr2)
                print('Ваш результат:', eval(f'{val1}{opr}{val2}'))
                return calc()
            except ZeroDivisionError:
                print('На ноль делить нельзя! Попробуте еще раз ')
                return calc()
        else:
            print('Вы ввели строку или нецелое число, попробуйте еще раз ')
            return calc()
    elif opr not in '+*-/':
        print('Введена неверная операция, попробуйте еще раз ')
        return  calc()
       
calc()
        