"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def rec_calc():
    # Запросс операции
    operation = input('Please choice on of the following operations (+, -, *, / or 0 for Exit) : ')
    # Базовый случай
    if operation == '0':
        print("bye")
        return

    """ - !!!
    Чтобы сделать как в примере :
    -- Введите операцию (+, -, *, / или 0 для выхода): -
    -- Введите первое число: вп
    нужно делать 2 переменные и каждую из них проверять ? 
    решил сделать через цикл и хранить все в списке
    - !!!"""

    # месмто хранения чисел
    numbers = []
    # получаю числа
    for i in range(1, 3):
        number = input(f'Enter {i} number : ')
        if not number.isdigit():
            print('We need number not a string')
            return rec_calc()
        numbers.append(int(number))

    # операции
    if operation == '+':
        print(f'your result : {numbers[0] + numbers[1]}')

    elif operation == '-':
        print(f'your result : {numbers[0] - numbers[1]}')

    elif operation == '*':
        print(f'your result : {numbers[0] * numbers[1]}')

    elif operation == '/':
        if numbers[1] == 0:
            print('Zerro division error')

        print(f'your result : {numbers[0] / numbers[1]}')

    else:
        print(f'Unknown operation {operation}')
    return rec_calc()


"""
Вопрос 
в этой функции у нас нету стэка вызовов так получается ?
"""
rec_calc()
