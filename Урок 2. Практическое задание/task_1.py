"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""


def get_num(prompt):
    try:
        result = float(input(prompt))
    except ValueError:
        print('Неверное число, повторите ввод')
        return get_num(prompt)
    return result


def calc_recursive():
    operations = ['+', '-', '*', '/', '0']
    operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if operation == '0':
        return
    if operation not in operations:
        print('Неверная операция')
        return calc_recursive()
    x = get_num('Введите первое число: ')
    y = get_num('Введите второе число: ')
    if operation == '+':
        print(x+y)
    elif operation == '-':
        print(x-y)
    elif operation == '*':
        print(x*y)
    elif operation == '/':
        if y == 0:
            print('Деление на 0')
        else:
            print(x/y)
    return calc_recursive()


if __name__ == '__main__':
    calc_recursive()
