"""
Задание 1.	Написать программу, которая будет складывать, вычитать,
умножать или делить два числа. Числа и знак операции вводятся пользователем.
После выполнения вычисления программа не должна завершаться, а должна
запрашивать новые данные для вычислений. Завершение программы должно
выполняться при вводе символа '0' в качестве знака операции. Если пользователь
вводит неверный знак (не '0', '+', '-', '*', '/'), то программа должна
сообщать ему об ошибке и снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

"""Для сокращения кода использовал оператор eval, но прекрасно 
понимаю, что его использование ОЧЕНЬ опасно и порой лучше накатать "простыню" 
кода чем использовать этот оператор. Также была добавлена проверка операторов, 
так как in отработает быстрее, чем try-excepr"""


def calc(operator=' '):
    operator = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if operator == '0':
        return print('Выход из калькулятора')
    elif operator in ('+', '-', '*', '/'):
        try:
            a = int(input('Введите первое число: '))
            b = int(input('Введите второе число: '))
        except ValueError:
            print('Вы вместо трехзначного числа ввели строку (((. Исправьтесь')
            return calc(operator)
        try:
            print('Ваш результат: ', eval(f'{a}{operator}{b}'))
        except ZeroDivisionError:
            print('Дилить на 0 нельзя')
        return calc(operator)
    else:
        print('Введен неизвестный оператор. Исправьтесь')
        return calc(operator)


calc()
