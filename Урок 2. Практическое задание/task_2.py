"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_count(num, count, count_2, cnt):
    if num == 0 and cnt == 0:
        print('The end !', 'Нечетных: 0, Четных: 1')
    elif num == 0 and cnt != 0:
        print('The end!', 'Нечетных: ', count, ', ', 'Четных: ', count_2)
    elif num != 0:
        last = num % 10
#        print(last)
        cnt += 1
        if (last % 2) == 0:
            count_2 += 1
            num = (num - last) // 10
            even_count(num, count, count_2, cnt)
        else:
            count += 1
            num = (num - last) // 10
            even_count(num, count, count_2, cnt)


user_num = int(input('Введите число: '))

even_count(user_num, 0, 0, 0)
