"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def recur(numb, even=0, not_even=0):
    res = numb % 10
    res %= 2
    if res == 0:
        even += 1
        res = numb // 10
        if res == 0:
            print("четных чисел = ", even, "Не четных чисел = ", not_even)
            return
        recur(numb // 10, even, not_even)
    else:
        not_even += 1
        res = numb // 10
        if res == 0:
            print("четных чисел = ", even, "Не четных чисел = ", not_even)
            return
        recur(numb // 10, even, not_even)


recur(int(input("Введите число")), 0, 0)
