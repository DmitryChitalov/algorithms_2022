"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def my_def(num, even_numbers=0, non_even_numbers=0):
    if num == 0:
        return even_numbers, non_even_numbers
    else:
        number = num % 10
        if number % 2 == 0:
            even_numbers += 1
        else:
            non_even_numbers += 1
        return my_def(num // 10, even_numbers, non_even_numbers)


def my_def2():
    try:
        num1 = int(input('Введите число: '))
        print('Количество четных и нечетных цифр в числе равно:', my_def(num1))
    except ValueError:
        print('Не верный ввод, попробуйте еще раз')
        return my_def2()


my_def2()
