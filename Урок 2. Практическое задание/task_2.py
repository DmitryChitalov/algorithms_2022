"""
Задание 2.  Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
input_number = int(input('Введите число: '))


def parity_check(num, even, odd):
    if num == 0:
        return f'Колличество четных и нечетных цифр в числе равно: ({even}, {odd})'
    if (num % 10) % 2 == 0:
        even += 1
    else:
        odd += 1
    return parity_check(num//10, even, odd)


print(parity_check(input_number, 0, 0))
