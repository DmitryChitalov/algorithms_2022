"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def calc_numbers(numbers, odd=0, even=0):
    if numbers == 0:
        return print(f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})')
    else:
        if numbers % 10 % 2 == 0:
            even += 1
        else:
            odd += 1
    return calc_numbers(numbers//10, odd, even)
def calc_go():
    try:
        numbers = int(input('Bведите число: '))
        calc_numbers(numbers)

    except ValueError:
        print('Неправильный ввод. Введите число!')
        calc_go()

calc_go()