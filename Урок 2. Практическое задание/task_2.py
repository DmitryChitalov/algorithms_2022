"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_numbers(inp, even_numbers=0, odd_numbers=0):
    if inp:
        inp, d = divmod(inp, 10)
        if d % 2 == 0:
            even_numbers += 1
        else:
            odd_numbers += 1
        return count_numbers(inp, even_numbers, odd_numbers)
    return f'Четные числа: {even_numbers}\n'\
           f'Нечетные числа: {odd_numbers}'


if __name__ == '__main__':
    print(count_numbers(inp=int(input('Введите число: '))))
