"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def num_count(number, even_num=0, odd_num=0):
    if number // 10 == 0 and number % 10 == 0:
        return f'Количество четных чисел: {even_num}, количество нечетных чисел: {odd_num}.'
    num = number % 10
    if num % 2 == 0:
        even_num += 1
    if num % 2 != 0:
        odd_num += 1
    return num_count(int(number // 10), even_num, odd_num)


if __name__ == '__main__':
    print(num_count(34560))
    print(num_count(123))