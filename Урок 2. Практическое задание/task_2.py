"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def get_number(number):
    length_number = len(str(number))
    print(length_number)
    even_numbers = 0
    odd_numbers = 0
    if length_number == 1:  # базовый случай
        if number % 2 == 0:
            even_numbers += 1
        else:
            odd_numbers += 1
        print(f'Количество четных и нечетных цифр в числе равно: ({even_numbers}, {odd_numbers})')
        return
    elif number % 2 == 0:
        even_numbers += 1
        number = number // 10
    else:
        odd_numbers += 1
        number = number // 10
    get_number(number)


get_number(345620)
