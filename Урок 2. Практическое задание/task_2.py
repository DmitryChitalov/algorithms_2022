"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def count():
    i = 0
    def func():
        nonlocal i
        i += 1
        return i
    return func

def check(num_1):
    if num_1 == 0:
        return ((even()-1), (odd()-1))
    else:
        num_2 = num_1 % 10
        num_1 = num_1 // 10
        if num_2 % 2 == 0:
            even()
        else:
            odd()
        return check(num_1)

even = count()
odd = count()

try:
    num = int(input('Введите натуральное число: '))
    print(f'Количество четных и нечетных цифр в числе: {check(num)}')
except ValueError:
    print('Вы вместо числа ввели строку (((. Исправьтесь')
