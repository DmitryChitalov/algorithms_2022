"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //.

>> Решите через рекурсию.
>> Операции взятия по индексу применять нельзя.
>> В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


class MyApp:

    def __init__(self):
        self.even = 0
        self.not_even = 0
        self.number = 0

    def process(self):
        # Can be better with try/except, too lazy
        self.number = int(input('Введите число:'))

        self.get_numbers()

    def get_numbers(self):
        char = self.number % 10

        if char % 2 == 0:
            self.even += 1
        else:
            self.not_even += 1

        self.number = self.number // 10

        if self.number > 0:
            self.get_numbers()
        else:
            self.result()

    def result(self):
        print('Количество четных и нечетных цифр в числе равно: (%i, %i)' % (self.even, self.not_even))


app = MyApp()
app.process()

"""
    Введите число:323252
    Количество четных и нечетных цифр в числе равно: (3, 3)
"""