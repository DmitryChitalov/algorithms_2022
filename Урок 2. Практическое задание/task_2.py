"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def process(num: int, even_cnt: int, odd_cnt: int):
    if num == 0:
        return f'({even_cnt}, {odd_cnt})'
    else:
        digit = num % 10
        if digit % 2 == 1:
            odd_cnt += 1
        else:
            even_cnt += 1
        num = num // 10
        return process(num, even_cnt, odd_cnt)


if __name__ == '__main__':
    num_txt = input('Введите число: ')
    if not num_txt.isdecimal():
        print('Некорректный ввод')
    else:
        print(f'Количество четных и нечетных цифр в числе: {process(int(num_txt), 0, 0)}')
