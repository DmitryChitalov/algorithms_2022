"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.
Решите через рекурсию. В задании нельзя применять циклы.
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def valid_num():
    try:
        num = int(input("Введите натуральное число: "))
    except ValueError:
        print('Вы ввели не число!!!')
        return valid_num()
    return num


def count_val(num, even=0, odd=0):

    if num == 0:  # Базовый случай
        print(f"Количество четных и нечетных цифр в числе равно: "
              f"({even}, {odd})")
    else:
        if not num % 10 % 2:
            even += 1
        else:
            odd  += 1
        return count_val(num // 10, even, odd)


if __name__ == "__main__":
    count_val(valid_num())

# Введите натуральное число: 4r3r234
# Вы ввели не число!!!
# Введите натуральное число: 01352468
# Количество четных и нечетных цифр в числе равно: (4, 3)
