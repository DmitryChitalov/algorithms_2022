"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def evunev_counter(digit, even=0, uneven=0):
    if digit < 10:
        if digit % 2 == 0:
            return even + 1, uneven
        else:
            return even, uneven + 1
    if digit % 2 == 0:
        return evunev_counter(digit // 10, (even+1), uneven)
    else:
        return evunev_counter(digit // 10, even, (uneven+1))


print('Количество четных и нечетных цифр в числе равно: ',
      evunev_counter(int(input('Введите число: '))))
