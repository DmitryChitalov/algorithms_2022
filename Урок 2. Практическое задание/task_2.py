"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def odd_even_counter(examined_number, even=0, odd=0):
    if examined_number != 0:
        new_number = examined_number % 10
        examined_number //= 10
        if new_number % 2 == 0:
            even += 1
        else:
            odd += 1
        return odd_even_counter(examined_number, even, odd)
    else:
        return even, odd


try:
    input_number = int(input('Введите натуральное число: '))
    print(f'Количество четных и нечетных цифр в числе соответственно: {odd_even_counter(input_number)}')
except ValueError:
    print('Вы ввели строку вместо числа. Исправьтесь')
