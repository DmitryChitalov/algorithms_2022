"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def rec(val, counter):
    if val == 0:
        return

    if val % 2 == 0:
        counter[0] += 1
    else:
        counter[1] += 1
    rec(val // 10, counter)


vl = int(input('Введите число:'))

val = vl
counter = [0, 0]
# вариант 1
while val > 0:
    if val % 2 == 0:
        counter[0] += 1
    else:
        counter[1] += 1
    val = val // 10

print(f'Цикл четные: {counter[0]} нечетные {counter[1]}')

# вараинт 2
counter = [0, 0]
rec(vl, counter)
print(f'Рекурия четные: {counter[0]} нечетные {counter[1]}')
