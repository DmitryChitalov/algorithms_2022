"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def magic(num, even_nums=0, odd_nums=0):
  if num < 10:
    if num % 2 == 0:
      return (even_nums +1, odd_nums)
    else:
      return (even_nums, odd_nums + 1)
  else:
    if (num % 10) % 2 == 0:
      return magic(int(num / 10), even_nums +1, odd_nums)
    else:
      return magic(int(num / 10), even_nums, odd_nums + 1)


number = int(input('Введите число: '))
print(f'Количество четных и нечетных цифр в числе {number} равно: {magic(number)}')