"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def count_odds_evens(numb):
    if numb == 0:
        return [0, 1]
    else:
        odds = ((numb % 10) % 2) + count_odds_evens(numb // 10)[0]
        return [odds, len(str(numb)) - odds]

numb = int(input('Введите число: '))
odds, evens = count_odds_evens(numb)
print('Количество нечетных цифр - ' + str(odds) + ', количество четных - ' + str(evens))
