"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def even_count(num):
    num_even = num % 10
    if num_even % 2 == 0:
        even_not_even[0] += 1
    else:
        even_not_even[1] += 1
    if num // 10 == 0:
        return print(f'Количество четных и нечетных цифр в числе равно: {tuple(even_not_even)}')
    else:
        return even_count(num // 10)


even_not_even = [0, 0]
user_num = int(input('Введите число: '))
even_count(user_num)
