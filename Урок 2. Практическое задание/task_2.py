"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def counting(num, *, even=0, odd=0):
    if num == 0:
        return f'Количество четных: {even}, Количество нечетных: {odd}'
    if num % 10 % 2 == 0:
        return counting(num // 10, odd=odd, even=even + 1)
    if num % 10 % 2 == 1:
        return counting(num // 10, even=even, odd=odd + 1)


print(counting(int(input('Введите число: '))))
print(counting(34560))
print(counting(560))
