"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


###########################################################

def get_even_odd(num, even=0, odd=0):
    while num == 0:
        return "четных - %d, нечетных - %d" % (even, odd)
    else:
        if num % 2 == 0:
            return get_even_odd(num=num // 10, even=even + 1, odd=odd)
        else:
            return get_even_odd(num=num // 10, even=even, odd=odd + 1)


num = int(input('Введите число: '))
print(get_even_odd(num))
