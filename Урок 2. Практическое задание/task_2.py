"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def recursive_counter(number, even=0, odd=0):
    if number <= 0:
        return even, odd
    reduced_number, last_digit = divmod(number, 10)
    if last_digit % 2 == 0:
        return recursive_counter(reduced_number, even + 1, odd)
    else:
        return recursive_counter(reduced_number, even, odd + 1)


number = int(input("Введите число: "))
even, odd = recursive_counter(number)
print(f'Четные и нечетные цифпф в числах равны нулю: ({even}, {odd})')
