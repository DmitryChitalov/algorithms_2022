"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_numbers(number, odd=0, even=0):
    if number == 0:
        return f'Количество чисел: чётных {even} , нечётных {odd}'
    else:
        num = number % 10
        if num % 2 == 1:
            odd += 1
        else:
            even += 1
        return count_numbers(number // 10, odd, even)


user_num = int(input('Введите число: '))
print(count_numbers(user_num))
