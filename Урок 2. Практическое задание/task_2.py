"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def recur_method(numb, total=0, total1=0):
    if numb == 0:
        return total, total1
    else:
        ld = numb % 10
        if ld % 2 == 0:
            total += 1
        else:
            total1 += 1
        numb = numb // 10
        return recur_method(numb, total, total1)


try:
    number = int(input("Введите натуральное число: "))
    print(f"Количество четных и нечетных цифр в числе: {recur_method(number)}")
except ValueError:
    print("Вы ввели строку, повторите попытку")
