"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def calculation(my_num, even_num=0, odd_num=0):
    if my_num == 0:
         return even_num, odd_num
    else:
        new_num = my_num // 10
        if new_num % 2 == 0:
            even_num += 1
        else:
            odd_num += 1
        return calculation(my_num, even_num, odd_num)

try:
    MY_NUM = int(input("Введите натуральное число: "))
    print(f"Четных и нечетных цифр в числе: {calculation(MY_NUM)}")
except ValueError:
    print("Введите только число")
        
