"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def evenAndOdd(number, even=0, odd=0):

    if number == 0:
        return even, odd

    else:
        current_number = number % 10       # число с которым работаем
        number = number // 10  # оставшееся число

        if current_number % 2 == 0:
            even += 1
        else:
            odd += 1

        return evenAndOdd(number=number, even=even, odd=odd)
        
if __name__ = '__main__':        
try:
        enterNumber = int(raw_input('Введите число: '))
        print 'Количесво четных чисел и количество не четных чисел - {}'.format(evenAndOdd(enterNumber))
    except ValueError:
        print 'Ошибка! Была введена строка вместо числа...'
