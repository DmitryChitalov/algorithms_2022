"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def counting_even_odd(number, even_count=0, odd_count=0):
    """Подсчет количества четных и нечетных цифр числа number"""
    if number == 0:
        return even_count, odd_count

    last_digit = number % 10
    if last_digit % 2 == 0:
        even_count += 1
    else:
        odd_count += 1

    return counting_even_odd(number // 10, even_count, odd_count)


print(counting_even_odd(123))
print(counting_even_odd(222))
print(counting_even_odd(123445))
