"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_even_odd(num, odd=0, even=0):
    """
    В задании не оговаривались проверки правильности ввода, и прочие "Излишества)", поэтому я сконцентрировался только
    на решении. Задача решаеться правильно, через рекурсию. Интересно, насколько правильный мой подход к ней?
    :param num:
    :param odd:
    :param even:
    :return:
    """
    temp_num = num % 10
    if temp_num % 2 == 0:
        even += 1
    else:
        odd += 1
    if num // 10 > 0:
        count_even_odd(num // 10, odd, even)
    else:
        return print(f'Количество четных чисел -  {even}, количество нечетных чисел - {odd}')


if __name__ == '__main__':
    a = int(input('Введите натуральное число: '))
    count_even_odd(a)
