"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
# version 1
num = (input('Введите натуральное число: '))
even, odd = 0, 0

for i in num:
    j = int(i)
    if j % 2 == 0:
        even += 1
    else:
        odd += 1
print(f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})')


# version 2
def recur_m(num2, even2=0, odd2=0):
    if num2 == 0:
        return even2, odd2
    else:
        cur_n = num2 % 10
        num2 = num2 // 10
        if cur_n % 2 == 0:
            even2 += 1
        else:
            odd2 += 1
        return recur_m(num2, even2, odd2)


try:
    NUM = int(input('Введите натуральное число: '))
    print(f'Количество четных и нечетных цифр в числе равно: {recur_m(NUM)}')
except ValueError:
    print('Вы в место числа ввели строку. Исправьтесь')

# Взял у Вас из разьяснения ДЗ ((( сам не смог