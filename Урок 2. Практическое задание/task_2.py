"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def numbers_of_number():
    number = int(input('Введите число: '))
    lst = [0, 0]

    def check_num(num):
        if num:
            a = num % 10
            if not a % 2:
                lst[0] = (lst[0] + 1)
            else:
                lst[1] = (lst[1] + 1)
            num = num // 10
            check_num(num)
        return f'Количество четных цифр равно: {lst[0]}, нечетных цифр равно: {lst[1]}'

    print(check_num(number))


numbers_of_number()
