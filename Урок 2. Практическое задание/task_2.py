"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def recur_method(numb, even = 0, odd = 0):
    numb = str(numb)
    if len(numb) == 0:
        return print(f'Количество четных цифр - {even}, количество нечетных цифр - {odd}')
    else:
        if int(numb[0]) % 2 == 0: even += 1
        else: odd += 1
        numb = numb[1:]
        return recur_method(numb, even, odd)
try:
    num = int(input("Введите натуральное число: "))
except ValueError:
    print("Вы вместо числа ввели строку. Исправьтесь")
    num = int(input("Введите натуральное число: "))
recur_method(num)