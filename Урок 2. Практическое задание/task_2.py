"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def task_2(num=input("Введите число: "), i=0, x=0, y=0):
    if int(num) // 10**i == 0:
        return print(x, y)
    else:
        if (int(num) // 10**i) % 2 == 1:
            return task_2(num, i+1, x+1, y)
        elif (int(num) // 10**i) % 2 == 0:
            return task_2(num, i+1, x, y+1)


if __name__ == "__main__":
    task_2()
