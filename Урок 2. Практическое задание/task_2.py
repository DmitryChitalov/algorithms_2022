"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""
num = abs(int(input("Введите число: ")))
even = odd = 0


def recur_method(number):
    global odd
    global even
    if number != 0:
        if number % 10 % 2 != 0:
            odd = odd + 1
        else:
            even = even + 1
        number = number // 10
        recur_method(number)
    else:
        print(f"Количество четных и нечетных цифр в числе равно: ({even}, {odd})")


recur_method(num)

