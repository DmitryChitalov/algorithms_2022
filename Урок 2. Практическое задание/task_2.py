"""
2021-12-20
Geekbrains. Факультет python-разработки
Студент: Папко Роман.
Четверть 1. Алгоритмы и структуры данных на Python. Базовый курс
Урок 2. Циклы. Рекурсия. Функции.
Домашнее задание 2.
"""
"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def odd_even(numb, odd=0, even=0):
    if (numb % 10) % 2 == 0:
        even += 1
    else:
        odd += 1
    if numb > 10:
        odd_even(numb // 10, odd, even)
    else:
        print(f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})')
        return


odd_even(int(input(f'Введите число: ')))
