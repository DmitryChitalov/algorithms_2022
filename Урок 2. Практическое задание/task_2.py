"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def recursia(num, beda=0, ad=0):
    if num == 0:
        return beda, ad
    else:
        chislo = num % 10
        num = num // 10

        if chislo % 2 == 0:
            beda += 1
        else:
            ad += 1
        return recursia(num, beda=0, ad=0)

try:
    NUM = int(input('Введите целое число: '))
    print(f'Количество четных и нечетных цифр: {recursia(NUM)}')
except ValueError:
    print('Введена строка. Введите пожалуйста число')
