"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

counter = [0, 0]


def even_odd(num):
    if num < 10:
        if num % 10 % 2 == 0:
            counter[0] = counter[0] + 1
        else:
            counter[1] = counter[1] + 1
        print('Четных цифр:', counter[0], 'Нечетных цифр:', counter[1])
        return
    if num % 10 % 2 == 0:
        counter[0] = counter[0] + 1
        even_odd(num // 10)
    else:
        counter[1] = counter[1] + 1
        even_odd(num // 10)


even_odd(34567890)
