"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def chopper(num, even=0, uneven=0):
    if num % 2 == 0:
        even += 1
    else:
        uneven += 1
    num = num // 10
    if num > 9:
        chopper(num, even, uneven)
    else:
        if num % 2 == 0:
            even += 1
        else:
            uneven += 1
        print('Четных цифр: ', even, ' ', 'Нечетных цифр: ', uneven)


num = int(input('Введите число: '))
chopper(num)
