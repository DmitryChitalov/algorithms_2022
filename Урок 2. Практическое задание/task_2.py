"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def count_even_odd(num, even=0, odd=0):
    if num == 0:  # Базовый случай
        if even == 0 and odd == 0:  # Если сразу введен 0
            return 1, 0
        return even, odd

    elif num % 10 % 2:
        odd += 1
    else:
        even += 1

    return count_even_odd(num // 10, even, odd)


if __name__ == '__main__':
    number = int(input('Введите число: '))
    print('Количество четных и нечетных цифр в числе равно:', count_even_odd(number))
