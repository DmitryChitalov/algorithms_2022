"""
Реализуйте функции:
a) заполнение списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   заполнение словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
"""
import time

def time_of_function(function):
    def wrapped(*args):
        start_time = time.perf_counter()
        res = function(*args)
        print((time.perf_counter() - start_time)*1000)
        return res
    return wrapped



@time_of_function
def g(n):
    # var = [i + 1 for i in range(n)]
    # return var
    list = []
    for i in range(n):
        i += 1
        list.append(i)
    return list
print(g(12))



@time_of_function
def c(m):
    the_dict = {x:x*x for x in range(1, m)}
    return the_dict
print(c(9))

"""
Время выполнения заполнения словаря больше, чем списка,
из-за расчёта хеша для эллементов. 
"""



"""
b) получение элемента списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   получение элемента словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
"""

# @time_of_function
# def h (e):
#     for i in e:
#         i += ' mom'
#         return i
#
#
# print(h(['alice', 'david', 'carolina']))
#
# @time_of_function
# def w(t):
#     for k, v in t.items():
#         if k == "usd":
#             return v
#
# print(w({"rub": 1, "usd": 69.78, "eur": 78.28}))
"""
Время выполнения получения элемента из словаря больше, чем из списка,
из-за расчёта хеша для эллементов. 
"""


"""
с) удаление элемента списка, оцените сложность в O-нотации (операции нужно провдить в цикле)
   удаление элемента словаря, оцените сложность в O-нотации (операции нужно провдить в цикле)
   сделайте аналитику, что заполняется быстрее и почему
   сделайте замеры времени
"""
# @time_of_function
# def j(l):
#     for i in l:
#         if i > 2:
#             l.remove(i)
#             return l
# print(j([1,2,2,3,2,1,1,2,1]))
#
#
# @time_of_function
# def w(t):
#     for k, v in t.items():
#         if k == "usd":
#             del t[k]
#             return t
#
# print(w({"rub": 1, "usd": 69.78, "eur": 78.28}))
#
# """
# Время выполнения удаления элемента из словаря больше, чем из списка,
# из-за расчёта хеша для эллементов.
# """