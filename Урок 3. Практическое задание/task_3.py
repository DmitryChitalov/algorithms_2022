"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""

from hashlib import md5

def get_unique_slices(string: str) -> int:
    # Вернуть количество уникальных подстрок
    result_hashes: set = set()
    for i in range(1, len(string)):
        for j in range(len(string)-i+1):
            result_hashes.add(md5(string[j:j+i].encode()).hexdigest())
    return len(result_hashes)

if __name__ == "__main__":
    string = "papara"
    print(f'Количество уникальных элементов: {get_unique_slices(string)}')
    