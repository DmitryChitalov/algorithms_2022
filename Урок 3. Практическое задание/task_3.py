"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib

original_set = set()  # множество для хранения хешированных подстрок
some_string = 'papa'
for i in range(len(some_string)):
    for j in range(i + 1, len(some_string) + 1):
        # исключаем запись слова целиком во множество
        if some_string[i:j] != some_string:  # записываем только подстроки
            original_set.add(hashlib.sha256(some_string[i:j].encode()).hexdigest())
            print(some_string[i:j], end=' ')  # вывод всех подстрок,
            # включая дубли
print(f'\n{original_set}')  # вывод элементов множеста
print(f'Количество элементов во множестве: {len(original_set)}')
