"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib


test_str = "papa"
ryt = set()
ryt_hash = set()

for i in range(len(test_str)):
       for j in range(i + 1, len(test_str) + 1):
              res_dub = test_str[i: j]
              ryt.add(res_dub)
              res_byb = hashlib.sha256(test_str[i: j].encode('utf-8')).hexdigest()
              ryt_hash.add(res_byb)
print(ryt)
print(ryt_hash)