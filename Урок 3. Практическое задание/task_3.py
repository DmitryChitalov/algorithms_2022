"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""


def make_sub_str(s='papa'):
    """
    Функция подсчета уникальных подстрок.
    В вычисление хеша подставляется slice с минимальной разницей в единицу,
    посколько полное слово получать не нужно.
    """
    sub_s = set()
    for i in range(len(s)):
        for y in range(len(s) - 1, i, -1):
            sub_s.add(hashlib.sha256(s[i:y].encode()).hexdigest)
    return f'Количество уникальных подстрок: {len(sub_s)}'


if __name__ == '__main__':
    import hashlib

    print(make_sub_str())
