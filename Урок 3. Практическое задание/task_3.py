"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв
Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.
Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.
Пример:
рара - 6 уникальных подстрок
рар
ра
ар
ара
р
а
"""


import hashlib


def sub_str(str_in):
    res = set()
    for i in range(len(str_in)):
        res.add(hashlib.sha256(str_in[i:].encode()).hexdigest())
        res.add(hashlib.sha256((str_in[0:len(str_in) - i]).encode()).hexdigest())
    return res


if __name__ == '__main__':
    str_input = 'papa'
    print(f'Строка "{str_input}" \nимеет {len(sub_str(str_input))} '
          f'уникальных подстрок')

"""
Строка "papa" 
имеет 6 уникальных подстрок
"""
