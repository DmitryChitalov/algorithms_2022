"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""

import hashlib


def unique():
    string = input('Введите строку, состоящую из латинских букв')

    sum_substring = set()
    if len(string) == 1:
        print(f'1 уникальная подстрока в строке {string}')
    else:
        for i in range(len(string)):
            for j in range(len(string), i, -1):
                hash_str = hashlib.sha1(string[i:j].encode('utf-8')).hexdigest()
                sum_substring.add(hash_str)

        print(f'{len(sum_substring)} уникальных подстрок в строке {string}')


unique()
