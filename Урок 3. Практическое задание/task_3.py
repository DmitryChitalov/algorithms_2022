"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib


def get_unique(word):
    unique_words = set()
    for i in range(len(word)):
        for j in range(len(word), i, -1):
            if len(word[i:j]) != len(word):
                unique_words.add(hashlib.sha256(
                    word[i:j].encode('utf-8')).hexdigest())
            elif len(word) == 1:
                return f'{word} имеет {len(word)} уникальную подстроку'
    return f'{word} имеет {len(unique_words)} уникальных подстрок'


print(get_unique('papap'))
