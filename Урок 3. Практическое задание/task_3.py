"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции
Дана строка S длиной N, состоящая только из строчных латинских букв

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""

# Функция hash() возвращает хеш-значение объекта, если оно есть.
# Хэш-значения являются целыми числами.
# Они используются для быстрого сравнения ключей словаря во время поиска в словаре.

word = str(input("Введите слово для определения количества различных подстроек: "))

some_set = set()
some_dict = {}
for i in range(len(word)):
    for j in range(len(word) - 1 if i == 0 else len(word), i, -1):
        some_set.add(hash(word[i:j]))
        print(word[i:j])
        some_dict[word[i:j]] = hash(word[i:j])

print(list(some_dict.keys()))
print("Количество различных подстрок в заданном слове: ", len(some_set))
