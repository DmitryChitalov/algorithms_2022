"""
Задание 3.
Определить количество различных (уникальных) подстрок
с использованием хеш-функции.
Дана строка S длиной N, состоящая только из строчных латинских букв.

Подсказка: вы должны в цикле для каждой подстроки вычислить хеш
Все хеши записываем во множество.
Оно отсечет дубли.

Экономия на размере хранимых данных (для длинных строк) и
скорость доступа вместе с уникальностью элементов,
которые даёт множество, сделают решение коротким и эффективным.

Пример:
рара - 6 уникальных подстрок

рар
ра
ар
ара
р
а
"""
import hashlib


def get_str(in_st):
    str_len = len(in_st)
    start = 0
    st_set = set()
    while start < str_len:
        buff = str_len
        while buff != start:
            buff_stg = in_st[start:buff]
            if buff_stg != in_st:
                hash_obj = hashlib.md5(buff_stg.encode('utf-8'))
                res = hash_obj.hexdigest()
                st_set.add(res)
            buff -= 1
        start += 1
    return len(st_set)


st = 'qwewe'
print('Количество уникальных подстрок в строке %s = %s ' % (st, get_str(st)))
