"""
Задание 3.
Приведенный код, формирующий из введенного числа
обратно по порядку входящего в него
цифры и вывести на экран.
Сделать профилировку каждого алгоритма через timeit
Обязательно предлагаю еще свои варианты решений!
Сделайте вывод, какая из четырех реализаций эффективнее и почему!
"""


из  timeit  импортировать  timeit


 защита реверса ( enter_num , revers_num = 0 ):
    если  введите_num  ==  0 :
        возвращаться
    еще :
        число  =  введите_число  %  10
        число_реверсов  = ( число_реверсов  +  число  /  10 ) *  10
        введите_номер  //=  10
        реверсы ( enter_num , revers_num )


def  revers_2 ( enter_num , revers_num = 0 ):
    в то время как  enter_num  !=  0 :
        число  =  введите_число  %  10
        число_реверсов  = ( число_реверсов  +  число  /  10 ) *  10
        введите_номер  //=  10
    вернуть  номер_реверса

# Срез самой быстрой способности, постоянная устойчивость
 защита revers_3 ( enter_num ) :
    введите_номер  =  строка ( введите_номер )
    номер_реверса  =  номер_ввода [:: - 1 ]
    вернуть  номер_реверса

# В случае успеха за счет использования встроенных функций
 защита revers_4 ( enter_num ) :
    мой_список  =  список ( ул ( введите_номер ))
    мой_список . обратный ()
    номер_реверса  =  "" . присоединиться ( мой_список )
    вернуть  номер_реверса


число  =  234567
print ( timeit ( "revers(num,0)" , globals = globals ()))   # ->1.7128545000450686
print ( timeit ( "revers_2(num,0)" , globals = globals ()))   # ->1.0515017999568954
print ( timeit ( "revers_3(num)" , globals = globals ()))   # ->0.2843368999892846
print ( timeit ( "revers_4(num)" , globals = globals ()))   # ->0.5510705000488088