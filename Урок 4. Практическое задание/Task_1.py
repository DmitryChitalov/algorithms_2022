"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

ОБЯЗАТЕЛЬНО! Добавьте аналитику: что вы сделали и какой это принесло эффект
"""

from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


my_arr = [i for i in range(100)]

print(timeit('func_1(my_arr)', globals=globals(), number=10000))

'''
0.12599929999851156
В данном коде используеть цикл for, с помощью которого перебирается весь массив, и те элементы которые
удовлетворяют условию, записываются в новый массив.
'''


def func_2(nums):
    return [i for i in range(len(nums)) if nums[i] % 2 == 0]


print(timeit('func_2(my_arr)', globals=globals(), number=10000))

'''
0.06963600000017323
В моей ф-ции испоьзуется List Comprehension, это позволяет создавать и заполнять массив одновременно.
Из-за этого ф-ция работает быстрее.
'''
