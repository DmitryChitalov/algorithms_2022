from timeit import timeit


def simple(i):
    """Без использования «Решета Эратосфена»"""
    # О(n**2)

    count = 1
    n = 2
    while count <= i:
        t = 1
        is_simple = True
        while t <= n:
            if n % t == 0 and t != 1 and t != n:
                is_simple = False
                break
            t += 1
        if is_simple:
            if count == i:
                break
            count += 1
        n += 1
    return n


def eratosfen(i):
    """Используя «Решето Эратосфена»"""
    # О(n log(log n))
    n = 2
    l = i**2
    sieve = [x for x in range(l)]
    sieve[1] = 0
    while n < l:
        if sieve[n] != 0:
            m = n * 2
            while m < l:
                sieve[m] = 0
                m += n
        n += 1
    return [p for p in sieve if p != 0][i - 1]


i = int(input('Введите порядковый номер искомого простого числа: '))

print(simple(i))
print(eratosfen(i))

print(timeit("simple(i)", globals=globals()))
print(timeit("eratosfen(i)", globals=globals()))

'''
Введите порядковый номер искомого простого числа: 10
29
29
0.026115254000000476
0.026402529000000285

Введите порядковый номер искомого простого числа: 100
541
541
2.029751964
3.3518099720000007

Введите порядковый номер искомого простого числа: 1000
7919
7919
344.954784965
489.275572663

Результаты замеров времени показывают (сначала не писала размер number), что при небольших вводимых числах - 
время приблизительно одинаковое, но чем больше вводимое число, тем больше времени требуется на решение 
с помощью алгоритма "Решето Эратосфена".
Вывод получается неверный, судя по разбору Д/з.
Поэтому меняла number=1 (чтобы не очень долго считалось), меняла вводимые числа: дошла до 10000, но у меня всё равно
решето считает почему-то медленнее...
Введите порядковый номер искомого простого числа: 10000
104729
104729
71.351681332
151.48658429899996
Может код решета неверный?
'''