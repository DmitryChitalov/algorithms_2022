"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

ОБЯЗАТЕЛЬНО! Добавьте аналитику: что вы сделали и какой это принесло эффект
"""

from timeit import timeit


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


# 10000 замеров масива с 10000 элементами получается 9.655 - время выполнении функции
num = list(range(10000))
print(timeit("func_1(num)", globals=globals(), number=10000))
print(func_1(num))


# Здесь используется comprehension, и замеряется время выполнения функции - 8.086


def func_2(nums):
    new_arr = [i for i in range(len(nums)) if nums[i] % 2 == 0]
    return new_arr


print(timeit('func_2(num)', globals=globals(), number=10000))
print(func_2(num))


''' 10000 раз того же массива с 10000 элементами показали, что время выполнения функции уменьшилось,
 и теперь составляет примерно в 1.5 раза быстрее чем было.
 Увеличение скорости удалось при использовании "лист comprehension".
 '''
