"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""

from timeit import timeit


array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def my_func():
    freaquent = max(set(array), key=array.count)
    return f'Чаще всего встречается число {freaquent}, ' \
           f'оно появилось в массиве {array.count(freaquent)} раз(а)'
# можно и в одну строку написать, но засчёт дополнительного текста уродливо получается
# и два раза одно и то же считать приходится, а так получился самый быстрый вариант


print(f'{func_1()} | заняло: {timeit("func_1()", globals=globals())} сек.')
print(f'{func_2()} | заняло: {timeit("func_2()", globals=globals())} сек.')
print(f'{my_func()} | заняло: {timeit("my_func()", globals=globals())} сек.')

"""
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а) | заняло: 0.8013220830000001 сек.
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а) | заняло: 1.0692935000000001 сек.
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а) | заняло: 0.76788575 сек.
"""

