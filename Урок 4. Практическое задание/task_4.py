"""
Задание 4.

Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.

Сделайте профилировку каждого алгоритма через timeit

Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""
from timeit import timeit
from collections import Counter
from random import randint


# array = [1, 3, 1, 3, 4, 5, 1]
array = [randint(1, 100) for x in range(1, 1000)]

def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():

    number_count = Counter(array).most_common(1)
    return f'Чаще всего встречается число {number_count[0][0]}, ' \
           f'оно появилось в массиве {number_count[0][1]} раз(а)'


print('-' * 80)
print(func_1())
print('func_1 ', timeit(stmt='func_1()', number=1000, globals=globals()))
print('-' * 80)
print(func_2())
print('func_2 ', timeit(stmt='func_2()', number=1000, globals=globals()))
print('-' * 80)
print(func_3())
print('func_3 ', timeit(stmt='func_3()', number=1000, globals=globals()))
print('-' * 80)

"""
1) Данные при исследовании  array = [1, 3, 1, 3, 4, 5, 1] - массив из 7 элементов,
   и number = 1000000 (default)

--------------------------------------------------------------------------------
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
func_1  1.5401773000003232
--------------------------------------------------------------------------------
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
func_2  2.2257737999998426
--------------------------------------------------------------------------------
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
func_3  5.107509600000412
--------------------------------------------------------------------------------
func_1 использовать предпочтительнее с маленькими массивами.
 

2) Данные при исследовании  array - массив из 1000 элементов 
   и number = 1000
--------------------------------------------------------------------------------
Чаще всего встречается число 74, оно появилось в массиве 18 раз(а)
func_1  11.188708000000588
--------------------------------------------------------------------------------
Чаще всего встречается число 74, оно появилось в массиве 18 раз(а)
func_2  11.224548400000458
--------------------------------------------------------------------------------
Чаще всего встречается число 74, оно появилось в массиве 18 раз(а)
func_3  0.053932499999973516
--------------------------------------------------------------------------------

При работе с большими массивами однозначно наиболее эффективным является
использование func_3, реализованной с использованием специализированных 
объектов класса Counter из модуля collections !!!
"""