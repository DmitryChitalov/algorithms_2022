"""
Задание 4.
Приведены два алгоритма. В них определяется число,
которое встречается в массиве чаще всего.
Сделайте профилировку каждого алгоритма через timeit
Обязательно напишите третью версию (здесь возможно даже решение одной строкой).
Сделайте замеры и опишите, получилось ли у вас ускорить задачу
"""

from timeit import timeit

array = [1, 3, 1, 3, 4, 5, 1]


def func_1():
    m = 0
    num = 0
    for i in array:
        count = array.count(i)
        if count > m:
            m = count
            num = i
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {m} раз(а)'


def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


def func_3():
    num = max(array, key=lambda x: array.count(x))
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {array.count(num)} раз(а)'


def func_4():
    num = max(set(array), key=array.count)
    return f'Чаще всего встречается число {num}, ' \
           f'оно появилось в массиве {array.count(num)} раз(а)'

print(func_1())
print('Замер func_1: ', timeit("func_1", globals=globals(), number=1000000))

print(func_2())
print('Замер func_2: ', timeit("func_2", globals=globals(), number=1000000))

print(func_3())
print('Замер func_3: ', timeit("func_3", globals=globals(), number=1000000))

print(func_4())
print('Замер func_4: ', timeit("func_4", globals=globals(), number=1000000))

"""
Замер func_1:  0.01648359978571534
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_2:  0.016668499913066626
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_3:  0.016825500410050154
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_4:  0.01659710006788373

Замер func_1:  0.01863569999113679
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_2:  0.018849799875169992
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_3:  0.016943899914622307
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_4:  0.014907300006598234

Замер func_1:  0.014894700143486261
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_2:  0.01499769976362586
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_3:  0.016640299931168556
Чаще всего встречается число 1, оно появилось в массиве 3 раз(а)
Замер func_4:  0.016747899819165468

Странные цифры по итогам замеров.
От почти полного равенства, до диаметрально разных значений.
repeat тоже ясности не внёс.
Видимо более быстрого алгоритма мне найти не удалось.
Хотя, по идее, func_1 должен-быть слегка быстрее остальных - 
только один .count() отрабатывает.
"""

