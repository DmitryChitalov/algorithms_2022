"""
Задание 5.**9

Приведен наивный алгоритм нахождения i-го по счёту
простого числа (через перебор делителей).

Попробуйте решить эту же задачу,
применив алгоритм "Решето Эратосфена" (в материалах есть его описание)

Подсказка:
Сравните алгоритмы по времени на разных порядковых номерах чисел:
10, 100, 1000
Опишите результаты, сделайте выводы, где и какой алгоритм эффективнее
"""
from timeit import timeit


def simple(i):
    """Без использования «Решета Эратосфена»"""
    count = 1
    n = 2
    while count <= i:
        t = 1
        is_simple = True
        while t <= n:
            if n % t == 0 and t != 1 and t != n:
                is_simple = False
                break
            t += 1
        if is_simple:
            if count == i:
                break
            count += 1
        n += 1
    return n


def sieve(idx, n=8000):
    result = []
    for i in range(n + 1):
        result.append(i)
    result[1] = 0
    i = 2
    while i <= n:
        if result[i] != 0:
            j = i + i
            while j <= n:
                result[j] = 0
                j = j + i
        i += 1
    result = set(result)
    result.remove(0)
    if len(result) < idx:
        return sieve(idx, n=n*2)
    return sorted(result)[idx - 1]


i = int(input('Введите порядковый номер искомого простого числа: '))

# print(simple(i))
# print(sieve(i))
print(
    timeit('print(simple(i))',
           globals=globals(),
           number=1
           )
)
print(
    timeit('print(sieve(i))',
           globals=globals(),
           number=1
           )
)

"""
Вывод:
Минусом функции с применением "Решето Эратосфена" является необходимостью составления листа с ожидаемым кол-вом
натуральных чисел, в моем примере программа до 1000-ого индекса работает в статичном режиме, 
а после начинает работать рекурсивно, к примеру 10000 индекс обычная функция  находит за 95.4925971, 
а моя с использованием рекурсии за 0.23199410000000853
При работе с листом в 8000 значений, функция с алгоритмом "Решето Эратосфена" выполняется почти всегда быстрее

Примеры:
Введите порядковый номер искомого простого числа: 10
29
7.890000000010389e-05
29
0.006124799999999819
---------------------------------------------------------
Введите порядковый номер искомого простого числа: 100
541
0.004219099999999809
541
0.0037616000000002536
---------------------------------------------------------
Введите порядковый номер искомого простого числа: 1000
7919
0.5304059999999993
7919
0.004054399999999347
---------------------------------------------------------
Введите порядковый номер искомого простого числа: 10000
104729
95.4925971
104729
0.23199410000000853
---------------------------------------------------------
"""