"""
Задача 3.
В соответствии с документацией Python,
deque – это обобщение стеков и очередей.
Вот основное правило: если вам нужно
что-то быстро дописать или вытащить, используйте deque.
Если вам нужен быстрый случайный доступ, используйте list

Задача: создайте простой список (list) и очередь (deque).
Выполните различные операции с каждым из объектов.
Сделайте замеры и оцените, насколько информация в документации
соответствует дейстивтельности.

1) сравнить операции
append, pop, extend списка и дека и сделать выводы что и где быстрее

2) сравнить операции
appendleft, popleft, extendleft дека и соответствующих им операций списка
и сделать выводы что и где быстрее

3) сравнить операции получения элемента списка и дека
и сделать выводы что и где быстрее

Подсказка:
для того, чтобы снизить погрешность, желательно операции по каждой ф-ции
(append, pop и т.д.) проводить в циклах. Для замеров используйте timeit.
"""

from collections import deque
from timeit import timeit

lst_test = [5, 60, 900, 8000, 15000, 350000, 700000]
deq_test = deque('307981456820')

num = 5

""" 3. операции получения элемента списка и дека """
# Список


def get_el_from_lst(lst_test):
    for i in range(num):
        j = lst_test[i]


# Дек


def get_el_from_deq(deq_test):
    for i in range(num):
        j = deq_test[i]


# Замеры времени
print(timeit("get_el_from_lst(lst_test)", globals=globals()))
print(timeit("get_el_from_deq(deq_test)", globals=globals()))

"""
0.742349261
0.699704514

Элементы из списка можно получить быстрее
"""