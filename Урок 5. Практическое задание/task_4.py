"""
Задача 4.
Создайте обычный словарь и упорядоченный словарь OrderedDict.

Выполните операции, равные по смыслу, с каждым из словарей и сделайте замеры.
Опишите полученные результаты, сделайте выводы

И есть ли смысл исп-ть OrderedDict в Python 3.6 и более поздних версиях
"""
from collections import OrderedDict
from timeit import timeit

od = OrderedDict()
d = dict()


def add_d():
    for i in range(10):
        d[i] = i


def add_od():
    for i in range(10):
        od[i] = i


print(f'Заполнение обычного словаря: {timeit(stmt="add_d()", globals=globals(), number=1000)}')
print(f'Заполнение упорядоченного словаря: {timeit(stmt="add_od()", globals=globals(), number=1000)}')

'''
Заполнение обычного словаря: 0.0008922999986680225
Заполнение упорядоченного словаря: 0.001600000003236346
Делаем вывод, что обычный словарь заполняется быстрее.
Упорядоченный словарь медленнее, но он изначально и создавался не для того, чтобы быть быстрее обычного.
Он создавался для частых операций переупорядочивания
'''


def ch_d():
    l = d.keys()
    for i in l:
        d[i] = 'dict'


def ch_od():
    l = od.keys()
    for i in l:
        od[i] = 'dict'


print(f'Изменение обычного словаря: {timeit(stmt="ch_d()", globals=globals(), number=1000)}')
print(f'Изменение упорядоченного словаря: {timeit(stmt="ch_od()", globals=globals(), number=1000)}')

'''
Изменение обычного словаря: 0.0009577000018907711
Изменение упорядоченного словаря: 0.001822199992602691
Видим, что и здесь обычный словарь быстрее.
Да и с версии Python 3.6 обычный словарь научился запоминать порядок.
Так что в целом потребность в OrderedDict отпадает сама собой.
Если только не нужны специфичные функции для него.
'''
