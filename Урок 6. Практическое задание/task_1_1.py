"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""
from memory_profiler import profile
import random


@profile
def func_1(nums):
    """В предлагаемой функции цикл был заменен на list comprehension"""
    return [x for x in range(len(nums)) if nums[x] % 2 == 0]  # nums[x] это четные элементы, x это индексы


@profile
def func_2(nums):
    """В предлагаемой функции цикл был заменен на list comprehension"""
    return tuple([x for x in range(len(nums)) if nums[x] % 2 == 0])  # nums[x] это четные элементы, x это индексы


n = [random.randint(0, 1000000) for i in range(1000000)]

func_1(n)
func_2(n)

"""Вывод: простая замена list на tuple при возврате результатов 
кортежа на большом массиве сократила объем используемой памяти 
на 1.8 MiB"""

