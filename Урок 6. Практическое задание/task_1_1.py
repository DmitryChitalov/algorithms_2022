"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""
from memory_profiler import profile
from timeit import timeit

# исходный вариант
num_gen = [x for x in range(100)]


@profile
def first_iteration(n):
    if len(n) == 0:
        return None
    result = n[0]
    for i in range(len(n)):
        if n[i] < result:
            result = n[i]
    return result


print(f'Время работы исходного варианта = ',
      timeit('first_iteration(num_gen)', globals=globals(), number=1))

# Оптимизация
del num_gen
num_gen_2 = (x for x in range(100))


@profile
def second_iteration(n):
    res = next(n)
    for i in n:
        if i < res:
            res = i
    return res


print(f'Время работы оптимизированного варианта скрипта = ',
      timeit('second_iteration(num_gen_2)', globals=globals(), number=1))

"""
    Вместо списка создал генератор.
            1) Время работы значительно уменьшилось:
                Время работы исходного скрипта =  0.07181090000085533
                Время работы оптимизированного скрипта =  0.010377600003266707
"""
