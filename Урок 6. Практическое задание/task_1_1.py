"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""


"""
Урок 2. Задание 3.	Сформировать из введенного числа
обратное по порядку входящих в него
цифр и вывести на экран. Например, если введено число 3486,
то надо вывести число 6843.
Решите через рекурсию. В задании нельзя применять циклы.
"""
from memory_profiler import profile


@profile
def recursion(num):
    def flip(num, flip_num=''):
        if num == 0:
            return flip_num
        else:
            flip_num += str(num % 10)
            num = num / 10
        return flip(num, flip_num)
    print(f'Перевернутое число: {flip(num)}')


@profile
def second_flip(num):
    return str(num)[::-1]


try:
    num = int(input('Введите число: '))
    second_flip(num)
    recursion(num)
except ValueError:
    print("Вы вместо числа ввели строку")


'''
Память была оптимизирована путем замены рекурсии на встроенный метод
Количество занимаемой памяти после оптимизации снизилось
'''