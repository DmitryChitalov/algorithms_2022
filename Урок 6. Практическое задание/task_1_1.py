"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке;
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до, и версия после оптимизации;
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те, где с памятью и так все в порядке;
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""
from memory_profiler import profile
from numpy import array
from pympler.asizeof import asizeof

# Курс Основ Python Урок 6 домашнее задание 1
# Есть два списка, необходимо создать список, в котором содержатся элементы, находящиеся в двух указанных списках
fruits = ['Яблоко', 'Груша', 'Маракуйя', 'Гранат', 'Банан', 'Апельсин', 'Мандарин', 'Манго']
fruits2 = ['Помидор', 'Манго', 'Морковь', 'Свекла', 'Апельсин', 'Лук', 'Маракуйя']


@profile
def original():
    return [fruit for fruit in fruits if fruit in fruits2]


# Оптимизация через NumPy
@profile
def array_():
    return array((fruit for fruit in fruits if fruit in fruits2))


@profile
def tuple_():
    return tuple(fruit for fruit in fruits if fruit in fruits2)


@profile
def gen():
    for i in (fruit for fruit in fruits if fruit in fruits2):
        yield i


if __name__ == '__main__':
    print('Original', asizeof(original()), sep='\n')
    print('Generator', asizeof(gen()), sep='\n')
    print('Tuple', asizeof(tuple_()), sep='\n')
    print('Array', asizeof(array_()), sep='\n')
    print("""Разницы в оптимизации для данного скрипта не были замечены.
Но самими объектами занимается разное количество памяти:
- Список 368 байт
- Генератор 176
- Кортеж 344 
- Массив NumPy 120
""")
