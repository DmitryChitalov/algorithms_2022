"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""
import sys
"""
Основы Python (5 урок)
4. Представлен список чисел. Необходимо вывести те его элементы,
значения которых больше предыдущего.
"""

src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]

new_list = [src[i] for i in range(1, len(src)) if src[i] > src[i - 1]]

print(sys.getsizeof(new_list))



def check_numbers(lst_1):
    lst = tuple(lst_1)
    return (lst[i] for i in range(1, len(lst)) if lst[i] > lst[i - 1])


result = check_numbers(src)
print(sys.getsizeof(result))

# Для оптимизации по памяти, я список сделал картежем и поменял LC на генератор, еще убрал одну переменную.
# Для того, чтобы было видно результат оптимизации, я сделал замеры через sys.getsizeof().