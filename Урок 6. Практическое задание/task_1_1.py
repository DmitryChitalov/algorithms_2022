"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для первого скрипта
"""

'''
Курс Основы языка Python
Задание:
Решить задачу генерации нечётных чисел от 1 до n (включительно), не используя ключевое слово yield.
'''
from memory_profiler import profile
from numpy import array
from pympler import asizeof


# старое решение
@profile
def odd_nums(m):
    """Return odd nums from 1 to n"""
    return [num for num in range(1, m + 1, 2)]


# новое решение
@profile
def odd_nums_new(m):
    """Return odd nums from 1 to n"""
    return array([num for num in range(1, m + 1, 2)])


n = 100
print(asizeof.asizeof(odd_nums(n)))
print(asizeof.asizeof(odd_nums_new(n)))

# с помощью numpy удалось значительно уменьшить размер, необходимый для массива
