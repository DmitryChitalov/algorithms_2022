"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""

from memory_profiler import memory_usage
from numpy import array

"""Задание 4_1 с курса Алгоритмы"""


def deco(func):
    def wrapper(*args):
        start = memory_usage()
        res = func(*args)
        stop = memory_usage()
        mem_diff = stop[0] - start[0]
        return res, mem_diff
    return wrapper


@deco
def func_1():
    n = [i for i in range(1000000)]
    new_arr = (i for i in n if i % 2 == 0)
    return new_arr


@deco
def func_2():
    n = array([i for i in range(1000000)])
    new_arr = array([i for i in n if i % 2 == 0])
    return new_arr


if __name__ == '__main__':
    res, mem = func_1()
    print(f'Использовано памяти: {mem}')

    res_arr, mem_arr = func_2()
    print(f'Использовано памяти: {mem_arr}')

    """
    Для оптимизации применен метод array модуля NumPy. 
    За счет более оптимального алгоритма работы с памятью
    данный метод позволил сократит объем занимаемой ОЗУ с
    38.99609375 до 7.60546875 Mib
    """
