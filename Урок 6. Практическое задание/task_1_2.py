"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта


За основу взят результат ДЗ 4 урока 4 задание
"""
import numpy
from memory_profiler import profile

array = [1, 3, 1, 3, 4, 5, 1]

# Далее для формирования значимого по размеру массива добавим блок кода для расширения массива
for ii in range(1, 90000):
    array.append(ii)


@profile
def func_2():
    new_array = []
    for el in array:
        count2 = array.count(el)
        new_array.append(count2)

    max_2 = max(new_array)
    elem = array[new_array.index(max_2)]
    return f'Чаще всего встречается число {elem}, ' \
           f'оно появилось в массиве {max_2} раз(а)'


print(func_2())
print('_______________________Оптимизированный код________________________')


@profile
def func_22():
    new_array2 = []
    for el in array:
        count2 = array.count(el)
        new_array2.append(count2)
    nump_arr = numpy.asarray(new_array2)
    max_3 = max(nump_arr)
    elem1 = array[new_array2.index(max_3)]
    return f'Чаще всего встречается число {elem1}, ' \
           f'оно появилось в массиве {max_3} раз(а)'


print(func_22())

"""

Аналитика: для оптимизации использования памяти применили numpy, 
что привело даже к высвобождению памяти от начальных значений. 

"""
