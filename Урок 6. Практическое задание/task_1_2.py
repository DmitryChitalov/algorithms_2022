"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""
# код из задания 1, урок 4

from memory_profiler import profile


@profile
def shell():
    some_arr = []
    for i in range(100000):
        some_arr.append(i)

    new_arr = []
    for i in range(len(some_arr)):
        if some_arr[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


# так как нам не требуется менять исходный тестовый массив, можно получить выигрышь в памяти,
# сделав из него кортеж, сразу после генерации, перед дальнейшим использованием в коде

@profile
def shell_2():
    some_arr = []
    for i in range(100000):
        some_arr.append(i)
    some_arr = tuple(some_arr)

    new_arr = []
    for i in range(len(some_arr)):
        if some_arr[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


shell()
shell_2()
