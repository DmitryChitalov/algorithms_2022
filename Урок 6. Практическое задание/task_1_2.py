"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""


def check_numbers(number: int, odd_digits: int = 0, even_digits: int = 0):
    """Функция принимает в себя число, а также количество четных и нечетных цифр в числе,
    которые по умолчанию равны нулю, до тех пор пока длинна числа больше 1, функция отделяет последнюю цифру
    и проверяет ее на четность и рекурсивно вызывает сама себя передавая в себя остаток числа и результаты проверки"""
    if len(str(number)) > 1:
        num = number % 10
        if num % 2 == 0:
            even_digits += 1
        else:
            odd_digits += 1
        check_numbers(number // 10, odd_digits, even_digits)
    else:
        if number % 2 == 0:
            even_digits += 1
        else:
            odd_digits += 1
        print(f'Количество четных и нечетных цифр в числе равно: ({even_digits}, {odd_digits})')


check_numbers(int(input('Введите число: ')))
