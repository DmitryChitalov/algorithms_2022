"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для второго скрипта
"""
from memory_profiler import profile


'''
задание из основ 5 задача из 5 дз
Представлен список чисел. Определить элементы списка, не имеющие повторений. 
'''
src = range(10000)


@profile
def func_3(src):
    uniqie_sp = set()
    temp = set()
    for el in src:
        if el not in temp:
            uniqie_sp.add(el)
        else:
            uniqie_sp.discard(el)
        temp.add(el)
    return temp


func_3(src[:])
# прирост занял 0.7 MiB во время выполнения


@profile
def func_1(src):
    uniqie_sp = [el for el in src if src.count(el) == 1]
    return uniqie_sp


func_1(src[:])
# прирост занял 0.1 MiB во время выполнения


'''
В первом случае, путем перебора списка в процессе выполнения прирост памятьи составил 0,6 MiB
После оптимизации, с переходом на генератор, в процессе выполнения прирост составил всего 0,1 MiB,
так как ленивые итераторы не хранят свое содержимое в памяти.
'''
