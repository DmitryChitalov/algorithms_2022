"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
##############################################################################
from memory_profiler import profile
import random

@profile
def check_min_1(lst_obj):
    """Функция должна обеспечивать поиск минимального значения для списка.

    Алгоритм 1:
    Сложность: O(n^2) - квадратичная.
    """
    for i in range(len(lst_obj)):
        min = i
        for j in range(len(lst_obj)):
            if lst_obj[j] < lst_obj[min]:
                min = j
    return lst_obj[min]

##############################################################################
@profile
def check_min_2(lst_obj):
    """Функция должна обеспечивать поиск минимального значения для списка.

    Алгоритм 2:
    Сложность: O(n) - линейная.
    """
    min_obj = lst_obj[0]
    for obj in lst_obj:
        if obj < min_obj:
            min_obj = obj
    return min_obj


lst = random.sample(range(-10000, 10000), 1000)

print(check_min_1(lst))
print(check_min_2(lst))