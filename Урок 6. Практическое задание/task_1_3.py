"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
"""
Задание 1.

Пользователь вводит данные о количестве предприятий,
их наименования и прибыль за 4 квартала
(т.е. 4 отдельных числа) для каждого предприятия.
Программа должна определить среднюю прибыль (за год для всех предприятий)
и вывести наименования предприятий, чья прибыль выше среднего и отдельно
вывести наименования предприятий, чья прибыль ниже среднего

Подсказка:
Для решения задачи обязательно примените коллекцию из модуля collections
Для лучшего освоения материала можете сделать
несколько варианто решения этого задания,
применив несколько коллекций из модуля collections

Пример:
Введите количество предприятий для расчета прибыли: 2
Введите название предприятия: Рога
через пробел введите прибыль данного предприятия
за каждый квартал(Всего 4 квартала): 235 345634 55 235

Введите название предприятия: Копыта
через пробел введите прибыль данного предприятия
за каждый квартал(Всего 4 квартала): 345 34 543 34

Средняя годовая прибыль всех предприятий: 173557.5
Предприятия, с прибылью выше среднего значения: Рога
Предприятия, с прибылью ниже среднего значения: Копыта
"""
from memory_profiler import profile
from collections import OrderedDict
import recordclass


@profile
def var1():
    order_dct = OrderedDict()
    # # ввод данных
    for j in range(0, 40000, 2):
        order_dct[j] = [235, 345634, 55, 235]
        order_dct[j + 1] = [345, 34, 543, 34]

    average_p = sum(map(sum, order_dct.values())) / len(order_dct)
    print(f'Средняя годовая прибыль всех предприятий: {average_p}')
    # comps = [x for x in order_dct.keys() if sum(order_dct[x]) > average_p]
    # print(comps)


def sum_lst(ob):
    return ob.x1 + ob.x2 + ob.x3 + ob.x4


@profile
def var2():
    firm = recordclass.recordclass('Firm', 'name x1 x2 x3 x4')
    firms = []
    for j in range(0, 40000, 2):
        firms.append(firm(j, 235, 345634, 55, 235))
        firms.append(firm(j + 1, 345, 34, 543, 34))

    average_p = sum(map(sum_lst, firms)) / len(firms)
    print(f'Средняя годовая прибыль всех предприятий: {average_p}')


var1()
var2()

'''
recordclass дает выигрышь по памяти в 4 раза, по сравнению с dict
можно было еще list заменить на tuple
'''
