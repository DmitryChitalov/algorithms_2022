"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
# Курс Основы языка Python, урок 5, задание 5
from memory_profiler import profile
from random import randint


@profile
def unique(src):
    unique_src = set()
    each = set()
    for i in src:
        if i not in each:
            unique_src.add(i)
        else:
            unique_src.discard(i)
        each.add(i)
    unique_src_sort = [el for el in src if el in unique_src]
    return unique_src_sort


@profile
def unique_optimized(src):
    unique_src = [i for i in src if src.count(i) == 1]
    return unique_src


print(unique_optimized([randint(1, 10000) for i in range(10000)]))
print(unique([randint(1, 10000) for v in range(10000)]))

print('\nВывод: оптимизировал превратив весь неоптимизированный код в один LC')
