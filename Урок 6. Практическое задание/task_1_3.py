"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""
from sys import getsizeof
from collections import namedtuple

def num_translate(eng_num):
    vocablurary = {
        "one": "один",
        "two": "два",
        "three": "три",
        "four": "четыре",
        "five": "пять",
        "six": "шесть",
        "seven": "семь",
        "eight": "восемь",
        "nine": "девять",
        "ten": "десять",
    }
    print(f'Размер словаря {getsizeof(num_translate)}')

    print(f'{vocablurary.get(eng_num, "такого слова нет")}')


def new_func(number):
    translate_ = namedtuple('translate_', 'one, two, three, four, five,'
                                          'six, seven, eight, nine, ten')
    trl = translate_(one='один', two='два', three='три',
                     four='четыре', five='пять', six='шесть', seven='семь',
                     eight='восемь', nine='девять', ten='десять')
    print(f' Размер именованого кортежа {getsizeof(trl)}')
    return f'{getattr(trl, number.lower(), "Такой цыфры нет")}'


if __name__ == '__main__':
    num_translate('six')
    print(new_func('six'))
#
# Размер словаря 136
# шесть
#  Размер именованого кортежа 120
# шесть
