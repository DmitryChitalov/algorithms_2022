"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для третьего скрипта
"""

from memory_profiler import memory_usage

def memory_decor(func):
    def wrapper(*args):
        m1 = memory_usage()
        func(args[0])
        m2 = memory_usage()
        return m2[0] - m1[0]
    return wrapper

'''
Скрипт из урока 3 задания 3.
'''

@memory_decor
def get_indexes_of_even(nums):
    new_arr = [i for i, num in enumerate(nums) if num % 2 == 0]
    return new_arr

'''В отимизированной версии сделала через генератор'''

@memory_decor
def get_indexes_of_even_2(nums):
    for i in range(nums):
      if nums[i] % 2 == 0:
        yield i

nums = list(range(1, 100000))

print(get_indexes_of_even(nums))
print(get_indexes_of_even_2(nums))


'''
Мои результаты:

get_indexes_of_even()     - 1.7890625
get_indexes_of_even_2()   - 0.0

Оптимизированная версия занимает меньше памяти
'''
