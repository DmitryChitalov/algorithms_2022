"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""
from collections import namedtuple


def avg_profit(data):
    co_profit = {}
    my_companies = namedtuple('Фирма', 'user_choice_2 q_1 q_2 q_3 q_4')
    count = 0
    my_list = []
    try:
        while count < data:
            user_choice_2 = input(f"Введите название {count + 1} предприятия: ")
            user_choice_3 = input("Через пробел введите прибыль данного "
                                  "предприятия за каждый квартал "
                                  "(Всего 4 квартала): ")

            my_list.append(user_choice_3.split())

            for el in my_list:
                firm = my_companies(user_choice_2,
                                    q_1=int(el[0]),
                                    q_2=int(el[1]),
                                    q_3=int(el[2]), q_4=int(el[3]))
                co_profit[firm.user_choice_2] = (firm.q_1 + firm.q_2 +
                                                 firm.q_3 + firm.q_4) / 4
            count += 1
        avg_year_profit = sum(co_profit.values()) / data
        max_profit = [k for k, v in co_profit.items() if v > avg_year_profit]
        min_profit = [k for k, v in co_profit.items() if v < avg_year_profit]
        return f"Средняя годовая прибыль всех предприятий >>> " \
               f"{avg_year_profit}K $\n" \
               f"Предприятия, с прибылью выше среднего значения: " \
               f"{max_profit}\n" \
               f"Предприятия, с прибылью ниже среднего значения: " \
               f"{min_profit}"
    except (IndexError, ValueError) as e:
        return f"{e} >>> input data is incorrect!"


user_choice_1 = int(input("Введите количество предприятий "
                          "для расчета прибыли: "))

print(avg_profit(user_choice_1))
