"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""

# Курс Основы Python lesson_2 task_2

from pympler.asizeof import asizeof
from numpy import array

# Курс основы Python lesson_5 task_4
# До оптимизации


def l_c(lst):
    list_number = [number for number in (src[1:]) if number > src[src.index(number) - 1]]
    print(f'Размер до оптимизации: {asizeof(list_number)}')


src = [300, 2, 12, 44, 1, 4, 10, 7, 1, 78, 123, 55]
l_c(src)

# После оптимизации


def l_c(lst):
    list_number = array([number for number in (src[1:]) if number > src[src.index(number) - 1]])
    print(f'Размер после оптимизации: {asizeof(list_number)}')


src = [300, 2, 12, 44, 1, 4, 10, 7, 1, 78, 123, 55]
l_c(src)


"""
Прибегнув к модулю Numpy в половину сократил расходы памяти на массив
Размер до оптимизации: 312
Размер после оптимизации: 152
"""