"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""
from memory_profiler import memory_usage


def decor(func):
    def wrapper(*args, **kwargs):
        m1 = memory_usage()
        print(m1)
        res = func(args[0])
        m2 = memory_usage()
        print(m2)
        mem_diff = m2[0] - m1[0]
        return res, mem_diff

    return wrapper


@decor
# 2.39453125 без tuple - 2.171875 c tuple - незначительно (возможно погрешность измерений)
def func_2(nums):
    my_list = []
    for k, v in enumerate(nums):
        if v % 2 == 0:
            my_list.append(k)
    return my_list


my_arr = tuple(range(100000))


res2, mem_diff2 = func_2(my_arr)
print(f'{mem_diff2} MenInBlack')
# 2.39453125 без tuple - 2.171875 c tuple - незначительно (возможно погрешность измерений)
