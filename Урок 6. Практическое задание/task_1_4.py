"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
ДЗ_5.4 курс основы Python
Представлен список чисел. Необходимо вывести те его элементы, значения которых больше предыдущего, например:
src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
result = [12, 44, 4, 10, 78, 123]
"""
from memory_profiler import profile
from numpy import array

src = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]


@profile()
def get_res(src):
    result = [src[i] for i in range(len(src)) if src[i] > src[i - 1] and i != 0]
    return result


@profile()
def get_res2(src):
    result = array([src[i] for i in range(len(src)) if src[i] > src[i - 1] and i != 0])
    return result


'''
в данном случае для хранения результатов срабатывания функции я использовал array вместо обычного списка что должно 
уменьшить количество выделяемой памяти но разница становится заметной только при значительном количестве 
элементов входящих в результат 
'''
get_res(src)
get_res2(src)
