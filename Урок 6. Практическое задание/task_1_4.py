"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""

'''
Алгоритмы и структуры данных на Python. Базовый курс
Сформировать из введенного числа
обратное по порядку входящих в него
цифр и вывести на экран
'''
from memory_profiler import profile


@profile
def get_reversed_num(num):
    if num < 10:
        return num
    return str(num % 10) + str(get_reversed_num(num // 10))


@profile
def get_reversed_num_new(num):
    return str(num)[::-1]


@profile
def get_reversed_num_new_2(enter_num):
    num_list = list(str(enter_num))
    num_list.reverse()
    return ''.join(num_list)


print(get_reversed_num(100126546540))
print(get_reversed_num_new(100126546540))
print(get_reversed_num_new_2(100126546540))

# пытался оптимизировать код избавившись от рекурсии, но цифры остались те же,
# вероятно, польза если и есть, то незначительная
# при этом для функции с рекурсией на каждый вызов строится таблица профилирования,
# а для функции без рекурсии одна
