"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для четвертого скрипта
"""
from memory_profiler import profile


# Урок 4. Задание 1

@profile
def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr


@profile
def func_1_mem(nums):
    return (x for x in nums if x % 2 == 0)


if __name__ == '__main__':
    num = tuple(range(100000))
    func_1(num)
    func_1_mem(num)

"""
Ленивые вычисления. Генератор вместо списка

Line #    Mem usage    Increment   Line Contents
================================================
    38     20.5 MiB      0.0 MiB   @profile
    39                             def func_2(nums):
    40     21.8 MiB      1.3 MiB       return [x for x in nums if x % 2 == 0]


Filename: C:\DEV\Python\algorithms_2022\Урок 6. Практическое задание\task_1_4.py

Line #    Mem usage    Increment   Line Contents
================================================
    43     20.8 MiB      0.0 MiB   @profile
    44                             def func_2_mem(nums):
    45     20.8 MiB      0.0 MiB       return (x for x in nums if x % 2 == 0)

"""
