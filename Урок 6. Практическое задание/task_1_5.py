"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
"""
"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
ДЗ_4.4 курс основы Python
"""
from memory_profiler import profile
from json import dumps


@profile()
def thesaurus(*args):
    """
    :param args: takes a list of names (принимает список из имен)
    :return: a dictionary where the key is the first letter of the name and the value is a list of names starting with that letter
    (словарь в котором ключ это первая буква имени, а значение это список состоящий из имен начинающихся на эту букву)
    """
    name_dict = {}
    for i in args:
        key = i[0]
        if not key in name_dict:
            name_dict[key] = [i]
        else:
            name_dict[key].append(i)
    return name_dict


print(thesaurus("Илья", "Иван", "Мария", "Петр", "Тамара", "Лена", "Люба"))

'''
для экономии данных я использовал сериализацию данных а именно превратил словарь в котором хранится результат
выполнения функции в строку что позволит значительно сэкономить память 
'''


@profile()
def thesaurus2(*args):
    name_dict = {}
    for i in args:
        key = i[0]
        if not key in name_dict:
            name_dict[key] = [i]
        else:
            name_dict[key].append(i)
    return dumps(name_dict)


print(thesaurus2("Илья", "Иван", "Мария", "Петр", "Тамара", "Лена", "Люба"))
