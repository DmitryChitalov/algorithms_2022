"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
"""
# Курс Алгоритмы и структуры данных, Урок 2, задание 5
from memory_profiler import profile


@profile
def wrapper(ascii_v, num):
    def ascii_range(ascii_val, number):
        a = chr(ascii_val)
        if number == ascii_val:
            print(a)
            return
        print(a, end=' ')
        if ascii_val % 10 == 0:
            print('\n')
        return ascii_range(ascii_val + 1, number)
    return ascii_range(ascii_v, num)


@profile
def ascii_range_optimized(ascii_val, number):
    for i in range(ascii_val, number+1):
        a = chr(i)
        if number == i:
            print(a)
            return
        print(a, end=' ')
        if i % 10 == 0:
            print('\n')


ascii_value = int(input('Введите номер символа с которого начать: '))
n = int(input('Введите номер символа которым закончить: '))
ascii_range_optimized(ascii_value, n)
wrapper(ascii_value, n)
print('\nВывод: также как и в предыдущих заданиях, добился оптимизации памяти превратив рекурсию в цикл \n'
      'и убрав ненужные детали, в том числе улучшил сам код из дз чтобы самому можно было указать в \n'
      'каком диапазоне выдавать ASCII-символы, от 0 до 100 уже видна небольшая разница в потреблении памяти')
