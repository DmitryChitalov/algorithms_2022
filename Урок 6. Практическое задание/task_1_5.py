"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
"""
# Курс Основы языка Python, Урок 3, задание 3+4
from collections import defaultdict
from memory_profiler import profile
name_surname_list = ['Виктория Яковлева', 'Мария Давыдова', 'Александра Маслова', 'Полина Гальцева',
                     'София Никитина', 'Сергей Носков', 'Степан Максимов', 'Илья Борисов',
                     'Матвей Максимов', 'Лев Ширяев']*1000


@profile
def thesaurus_adv(n_s_list):
    names_surnames = {}
    for n_s in n_s_list:
        names_surnames.setdefault(n_s.split()[1][0], {}).setdefault(n_s.split()[0][0], []).append(n_s)
    return names_surnames


@profile
def thesaurus_adv_optimized(n_s_list):
    names_surnames = defaultdict(dict)
    for n_s in n_s_list:
        names_surnames[n_s.split()[1][0]].setdefault(n_s.split()[0][0], []).append(n_s)
    return names_surnames


print(thesaurus_adv_optimized(name_surname_list))
print(thesaurus_adv(name_surname_list))
print('\nВывод: оптимизировал добавив defaultdict вместо dict и тем самым убрал один setdefault')
