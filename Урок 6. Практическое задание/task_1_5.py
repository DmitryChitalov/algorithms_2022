"""
Задание 1.

Вам нужно взять 5 любых скриптов, написанных ВАМИ в рамках работы над ДЗ
курсов Алгоритмы и Основы Python

На каждый скрипт нужно два решения - исходное и оптимизированное.

Вы берете исходное, пишете что это за задание и с какого оно курса.
Далее выполняете профилирование скрипта средствами memory_profiler

Вы оптимизируете исходное решение.
Далее выполняете профилирование скрипта средствами memory_profiler

Вам нужно написать аналитику, что вы сделали для оптимизации памяти и
чего добились.


ВНИМАНИЕ:
1) скрипты для оптимизации нужно брать только из сделанных вами ДЗ
курсов Алгоритмы и Основы
2) нельзя дублировать, коды, показанные на уроке
3) для каждого из 5 скриптов у вас отдельный файл, в нем должна быть версия до
и версия после оптимизации
4) желательно выбрать те скрипты, где есть что оптимизировать и не брать те,
где с памятью и так все в порядке
5) не нужно писать преподавателю '''я не могу найти что оптимизировать''', это
отговорки. Примеров оптимизации мы перечислили много: переход с массивов на
генераторы, numpy, использование слотов, применение del, сериализация и т.д.

Это файл для пятого скрипта
"""

from memory_profiler import memory_usage

def memory_decor(func):
    def wrapper(*args):
        m1 = memory_usage()
        func(args[0])
        m2 = memory_usage()
        return m2[0] - m1[0]
    return wrapper

'''
Скрипт из урока 2 задания 4.
'''

@memory_decor
def get_sum(numb_of_el):
    if numb_of_el == 1:
        return 1
    else:
        return (-0.5)**(numb_of_el - 1) + get_sum(numb_of_el - 1)

'''В отимизированной версии использовала цикл'''

@memory_decor
def get_sum_2(numb_of_el):
    res = 0
    while numb_of_el > 0:
        res += (-0.5)**(numb_of_el - 1)
        numb_of_el -= 1
    return res

print(get_sum(500))
print(get_sum_2(500))

'''
Мои результаты:

get_sum()     - 2.79296875
get_sum_2()   - 0.0

Оптимизированная версия занимает меньше памяти
'''
