"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""
from memory_profiler import profile


# Скрипт из урока 2, задание 2.
@profile
def cn(num_):
    def check_num(num, ce=0, co=0):
        if (num % 10) % 2 == 0:
            ce += 1
        else:
            co += 1
        if num // 10 == 0:
            return f'Четных: {ce} Нечетных: {co}'
        return check_num((num // 10), ce, co)
    return check_num(num_)


if __name__ == '__main__':
    print(cn(int(input('Введите число: '))))


'''
Дело в том, что при каждом вызове рекурсии, будет срабатывать вывод информации декоратора,
то есть, сколько вызовов функции столько будет и таблиц.
Для предотвращения этого, можно рекурсию обернуть дополнительно функцией.
'''