from memory_profiler import profile
"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение
"""


def revers_int(numb):
    """Реверс числа"""
    return '' if numb == 0 else str(numb % 10) + revers_int(numb // 10)


@profile
def test_for_recur():
    revers_int(123456789)


if __name__ == '__main__':
    test_for_recur()

"""
Главная проблема при замерах памяти рекурсивных функций заключается в том,
что, нам на каждую итерацию возвращается результат замера, что бы этого 
избежать и получить результат в одном замере, необходимо обернуть рекурсивную
функцию в функцию пустышку и замерять уже функцию постышку.
Тогда вывод результатов будет нормальным(Один)
Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
    20     19.4 MiB     19.4 MiB           1   @profile
    21                                         def test_for_recur():
    22     19.5 MiB      0.0 MiB           1       revers_int(123456789)

"""