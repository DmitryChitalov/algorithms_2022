"""
Задание 2.

Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.

Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.

Опищите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение.
"""
from memory_profiler import profile


def my_sum(n):
    if n == 1:
        return 1
    else:
        return my_sum(n-1) + n

# если применить декоратор к функции my_sum, замеры будут проведены при каждом вызове функции (в нашем случае n раз)
# для решения этой проблемы можно создать функцию, вызывающую функцию my_sum и замерить время ее выполнения


@ profile
def call_func(n):
    my_sum(n)


call_func(10)

# Line #    Mem usage    Increment  Occurrences   Line Contents
# =============================================================
#     25     19.4 MiB     19.4 MiB           1   @ profile
#     26                                         def call_func(n):
#     27     19.4 MiB      0.0 MiB           1       my_sum(n)


# замеры проводятся для функции, внутри которой помещена функция с рекурсивным вызовом
# таким образом замер проводится однократно для одного вызова внешней функции
