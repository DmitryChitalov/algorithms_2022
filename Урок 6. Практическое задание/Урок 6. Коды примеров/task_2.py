"""Для всех объектов в программе Python ведется подсчет ссылок.
Счетчик ссылок на объект увеличивается всякий раз, 
когда ссылка на объект записывается в новую переменную или 
когда объект помещается в контейнер, такой как список, кортеж или словарь"""


from sys import getrefcount


# --------------------------------Task_1------------------------------------ #
class MyClass:
    pass


# создаем экземпляр класса. увеличиваем счетчик ссылок на 1
mc = MyClass()
# создаем ссылку на объект. увеличиваем счетчик ссылок на 1
temp = mc
# при вызове getrefcount добавляется еще одна временная ссылка
print(getrefcount(mc))

# --------------------------------Task_2------------------------------------ #
a = 37
print(getrefcount(37))
b = a
print(getrefcount(37))
c = []
c.append(b)
print(getrefcount(37))

"""
Во многих случаях количество ссылок оказывается намного больше, 
чем можно было бы предположить. Для неизменяемых типах данных, 
таких как числа и строки, интерпретатор весьма активно стремится 
использовать в разных частях программы один и тот-же объект, 
чтобы уменьшить объем потребляемой памяти.
"""

# --------------------------------Task_3------------------------------------ #
del a
print(getrefcount(37))
b = 42
print(getrefcount(37))
c[0] = 2
print(getrefcount(37))
