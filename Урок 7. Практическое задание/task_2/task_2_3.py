"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.
Решите задачу тремя способами:
3) с помощью встроенной функции поиска медианы
сделайте замеры на массивах длиной 10, 100, 1000 элементов
В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

"""
Результат:
C:\python_projects\Algoritm\lesson_7\task\Scripts\python.exe C:\python_projects\Algoritm\lesson_7\task\task_2_3.py 
[-5, -83, -8, 13, 9, -83, -73, 68, 95, 26, -72, -6, 38, -69, 84, -96, 62, 74, 68, -5, -72, -35, -52, 16, -91, 72, 0, -10, -7, 31, 85, -1, -97, -51, 44, 47, -68, -65, 55, 79, 94, -97, -46, -23, 98, 93, 3, 36, 2, 31, -61, -48, 1, 2, -67, -20, -23, 65, 9, -35, 85, -39, -87, -88, -12, -7, 98, -11, -22, -42, -89, -42, 20, -84, 51, 98, -100, -13, 51, -52, -97, -92, 51, -37, 23, -82, 2, -4, 3, 42, -98, 97, -76, 17, 44, -51, 86, -76, -31, -9, -9, -56, -97, -95, -87, -3, 49, -94, -50, 23, 2, -76, -31, -25, -75, -74, -28, 25, -6, -24, 44, -58, -55, -64, 9, 2, -10, -92, 74]
Медиана для данного списка: -9
0.0009251000000000051
0.0033258999999999997
0.07022540000000001
Встроенная функция оказалась быстрее и проще, как и ожидалось.
Через сортировку - самый медленный способ. Особенно видно на большом количестве вызова функции.
Без сортировки, используя также встроенную функцию max(), был показан средний результат.
"""

from statistics import median
from random import randint
from timeit import timeit


def my_median(lst):
    return f'Медиана для данного списка: {median(lst)}'

m = randint(3, 100)
orig_list = [randint(-100, 100) for _ in range(2 * m + 1)]
print(orig_list)


print(my_median(orig_list[:]))

# замеры 10
orig_list = [randint(-100, 100) for _ in range(10)]

print(
    timeit(
        "my_median(orig_list[:])",
        globals=globals(),
        number=1000))

orig_list = [randint(-100, 100) for _ in range(100)]

# замеры 100
print(
    timeit(
        "my_median(orig_list[:])",
        globals=globals(),
        number=1000))

orig_list = [randint(-100, 100) for _ in range(1000)]

# замеры 1000
print(
    timeit(
        "my_median(orig_list[:])",
        globals=globals(),
        number=1000))
