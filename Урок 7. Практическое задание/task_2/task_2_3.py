"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randint
from timeit import timeit
from statistics import median


test_list = [randint(-1000, 1000) for _ in range(101)]
# test_list = [1, 5, 2, 10, 14, 15, 6, 3, 7, 4, 8, 11, 16, 9, 12, 13, 17]

print(test_list)
print(median(test_list))
print(
    timeit(
        "median(test_list)",
        globals=globals(),
        number=1000))

"""
Замеры времени:
--- на массиве из 11 элементов:
0.0008282839999999986
--- на массиве из 101 элемента:
0.007152801
--- на массиве из 1001 элемента:
0.126932844


Результат:
на первом месте встроенная функция median модуля statistics.
на втором - метос с помощью удаления максимальных элементов массива встроенными методами Python.
на последнем - поиск ответа через сортировку "Расчёской" и взятие среза отсортированного списка.
"""