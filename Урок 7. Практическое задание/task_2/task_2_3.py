"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

from statistics import median
from random import randint
from timeit import timeit


def finding_median(lst):
    return median(lst)


m_1 = 10
my_list_1 = [randint(1, 200) for _ in range(2 * m_1 + 1)]
print(timeit("finding_median(my_list_1[:])", globals=globals(), number=100))


m_2 = 100
my_list_2 = [randint(1, 200) for _ in range(2 * m_2 + 1)]

print(timeit("finding_median(my_list_2[:])", globals=globals(), number=100))


m_3 = 1000
my_list_3 = [randint(1, 200)for _ in range(2 * m_3 + 1)]

print(timeit("finding_median(my_list_3[:])", globals=globals(), number=100))

"""
0.00025716199999999134
0.0014190550000000024
0.028858160000000008
"""
"""
Самым эффективным оказался способ решения, реализованный с помощью встроенной функции поиска медианы.
Его эффективность особенно видна в результатах замеров большого массива.
Самым неэффективным оказался способ поиска медианы с помощью гномьей сортировки.
"""