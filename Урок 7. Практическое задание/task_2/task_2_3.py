"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from statistics import median
from random import randint
from timeit import timeit


def find_median(arr):
    return median(arr)


if __name__ == '__main__':
    numbers = (5, 50, 500)
    for number in numbers:
        array_2m_1 = [randint(-100, 100) for _ in range(2 * number + 1)]
        if number == 5:  # сам массив выводится только из 10 элементов
            print(f'Массив длинной {2 * number + 1} элементов: \n{array_2m_1}\nМедиана: {find_median(array_2m_1[:])}')
            print(f'Проверка: {sorted(array_2m_1)[number]}')  # проверяем встроенной сортировкой
        else:
            print(f'Массив длинной {2 * number + 1} элементов.')
        print('Замер:', timeit('find_median(array_2m_1[:])', globals=globals(), number=1000))
        print('-' * 30)

# Массив длинной 11 элементов:
# [28, -12, -44, -52, 70, -11, -29, -37, -98, -41, -77]
# Медиана: -37
# Проверка: -37
# Замер: 0.0007022999925538898
# ------------------------------
# Массив длинной 101 элементов.
# Замер: 0.004786900011822581
# ------------------------------
# Массив длинной 1001 элементов.
# Замер: 0.07442239997908473
# ------------------------------

# Вывод:
# замеры через сортировку кучей:
# 0.0195469000027515
# 0.3236126999836415
# 4.8052078000037
#
# замеры через удаление максимального элемента:
# 0.002243799972347915
# 0.065942199958954
# 6.2428613000083715
#
# замеры через statistics.median:
# 0.0007022999925538898
# 0.004786900011822581
# 0.07442239997908473
#
# Как и ожидалось функция median, из модуля statistics, работает значительно быстрее.
# Сортировка кучей неплохо работает только на больших массивах.
