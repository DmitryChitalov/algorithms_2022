"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.
Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randint
from timeit import timeit
from statistics import median


def get_median(m):
    my_list = [randint(0, (2 * m + 1)) for _ in range(2 * m + 1)]
    return median(my_list)


print(timeit('get_median(5)', globals=globals(), number=100))
print(timeit('get_median(50)', globals=globals(), number=100))
print(timeit('get_median(500)', globals=globals(), number=100))

"""
решение №1
0.0017842999999999956
0.0831637
8.8910255
решение №2
0.0012832999999999942
0.0186066
0.6531049
решение №3
0.0008854000000000084
0.008725499999999997
0.1062515

С вышеуказанных результатов замеров времени срабатывания функций очевидно, что надо использовать встроенные функции так 
как они гораздо быстрее выполняют свою работу 
"""
