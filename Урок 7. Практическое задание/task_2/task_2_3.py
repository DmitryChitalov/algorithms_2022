"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randrange
import timeit
from statistics import median


def timer(n):
    def deco(func):
        def wrapper(*args):
            result = 0
            for _ in range(n):
                start = timeit.default_timer()
                ret = func(*args)
                result += timeit.default_timer() - start
            print(f"Время выполнения {result:.5f}")
            return ret

        return wrapper

    return deco


@timer(100)
def median1(lst):
    return median(lst)


print("21 число", end=' ')
m = 10
median1([randrange(-100, 100) for _ in range(2 * m + 1)])
print("201 число", end=' ')
m = 100
median1([randrange(-100, 100) for _ in range(2 * m + 1)])
print("2001 число", end=' ')
m = 1000
median1([randrange(-100, 100) for _ in range(2 * m + 1)])

"""
Гномья сортировка
11 чисел Время выполнения 0.00026
101 число Время выполнения 0.00394
1001 число Время выполнения 0.25946
Сортировка Шелла (вроде)
21 число Время выполнения 0.00073
201 число Время выполнения 0.01048
2001 число Время выполнения 0.19373

Для убрать максимум:
21 число Время выполнения 0.00079
201 число Время выполнения 0.02768
2001 число Время выполнения 2.24681

Для встроенной функции:
21 число Время выполнения 0.00010
201 число Время выполнения 0.00081
2001 число Время выполнения 0.01793

С очевидностью, встроенная функция выигрывает. Что и следовало ожидать - иначе зачем бы они нужны?
Неожиданно вышло, что проигрывает вариант с функцией max. То есть понятно, что он квадратичный тоже
(потому что max - линейная для любой реализации, и она в линейном цикле), но чтоб прям так?

Допилила сортировку - вроде бы Шелла, но я не на 100 процентов уверена, что именно она 
(что сортирует - факт). Получился интересный результат. Вот:

Гномья:
11 чисел Время выполнения 0.00013
101 число Время выполнения 0.00221
100001 число Время выполнения 1028.52046

Шелла:
11 чисел Время выполнения 0.00035
101 число Время выполнения 0.00433
100001 число Время выполнения 12.96127

Видно, что на 10 и 100 тысячах такой способ проигрывает (из-за более сложного алгоритма, видимо).
На 1000 результаты были сомнительные, и я поехала дальше. На 10 000 Шелла выиграла в пять раз (пять секунд 
гномьей против 1 у Шелла), и я не поленилась запустить на 100 000. Тут уже разница совсем в пользу Шелла.
"""
