"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

from statistics import median
from random import randint
from timeit import timeit


m = int(input('Введите m: '))
ARRAY = [randint(-m, m) for _ in range(2 * m + 1)]
print('Создан массив длинной 2m + 1:', ARRAY)
print()

print(f'Время поиска медианы массива длиной {len(ARRAY)}:', timeit('median(ARRAY)', globals=globals(), number=1000))
print('Медиана массива:', median(ARRAY))
print()

ARRAY *= 9
print(f'Время поиска медианы массива длиной {len(ARRAY)}:', timeit('median(ARRAY)', globals=globals(), number=1000))
print('Медиана массива:', median(ARRAY))
print()

ARRAY *= 11
print(f'Время поиска медианы массива длиной {len(ARRAY)}:', timeit('median(ARRAY)', globals=globals(), number=1000))
print('Медиана массива:', median(ARRAY))

"""
Введите m: 5
Создан массив длинной 2m + 1: [-1, 4, 0, 2, 1, 3, -1, -3, 2, 1, -5]

Время поиска медианы массива длиной 11: 0.0008298530001411564
Медиана массива: 1

Время поиска медианы массива длиной 99: 0.006413119999706396
Медиана массива: 1

Время поиска медианы массива длиной 1089: 0.0645638890000555
Медиана массива: 1


По итогу работы трех скриптов можно сделать вывод, что встроенная функция median из модуля statictics работает 
эффективней чем два остальных способа. Без сортировки с большими массивами медиану искать долго. 
Если использовать более эффективный алгоритм сортировки, то время поиска медианы можно сократить.
"""
