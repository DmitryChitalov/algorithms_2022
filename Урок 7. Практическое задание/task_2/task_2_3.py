"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randint
from statistics import median
from timeit import timeit


if __name__ == '__main__':
    tlist = [12, 11, 13, 5, 6, 7, 1]
    print('Массив:', tlist, 'Медиана:', median(tlist))
    test_list10 = [randint(1, 10) for _ in range(11)]
    test_list100 = [randint(1, 100) for _ in range(101)]
    test_list1000 = [randint(1, 1000) for _ in range(1001)]
    print('Время выполнения на массиве длиной 10 элементов', timeit("median(test_list10[:])",
                                                                    globals=globals(), number=500))
    print('Время выполнения на массиве длиной 100 элементов', timeit("median(test_list100[:])",
                                                                    globals=globals(), number=500))
    print('Время выполнения на массиве длиной 1000 элементов', timeit("median(test_list1000[:])",
                                                                    globals=globals(), number=500))
    """
    Время выполнения на массиве длиной 10 элементов 0.0009926999999999575
    Время выполнения на массиве длиной 100 элементов 0.00789620000000002
    Время выполнения на массиве длиной 1000 элементов 0.14552469999999995
    
    Наименьшее время выполнения у встроенной функции median модуля statistics.
    Наибольшее - у функции, использующей метод сортировки кучей.
    """
