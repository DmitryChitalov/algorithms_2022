"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

from timeit import timeit
from random import randint
from statistics import median


def built_in_function(data):
    return median(data)


m_10 = 10
m_100 = 100
m_1000 = 1000
lst_10 = [randint(1, 100) for _ in range(2 * m_10 + 1)]
lst_100 = [randint(1, 100) for _ in range(2 * m_100 + 1)]
lst_1000 = [randint(1, 100) for _ in range(2 * m_1000 + 1)]

print(f'Исходный массив в 10 элементов:                {lst_10}')
print(f'Медиана сортированного массива в 10 элементов: {median(lst_10[:])}')
print('-----------------------------------------------------------------')
print('Время массива в 10 элементов:   ', end='')
print(timeit('built_in_function(lst_10[:])', globals=globals(), number=100))
print('Время массива в 100 элементов:  ', end='')
print(timeit('built_in_function(lst_100[:])', globals=globals(), number=100))
print('Время массива в 1000 элементов: ', end='')
print(timeit('built_in_function(lst_1000[:])', globals=globals(), number=100))

'''
Результаты поиска медианы без сортировки:
-----------------------------------------------------------------
Время массива в 10 элементов:   0.00020409998251125216
Время массива в 100 элементов:  0.00194980000378564
Время массива в 1000 элементов: 0.03279649995965883
Выводы:  
Лучший вариант определения медианы это использование 
встроенной функции median из пакета statistics,
с точки зрения скорости выполнения и простоты написания.
'''
