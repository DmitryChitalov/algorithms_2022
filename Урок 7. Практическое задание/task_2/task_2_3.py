"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""

import statistics
from random import randint
from timeit import timeit

m = 5
lst5 = [randint(-100, 100) for _ in range(2*m+1)]   # список из 11 элементов
m2 = 50
lst50 = [randint(-100, 100) for _ in range(2*m2+1)]     # список из 101 элемента
m3 = 500
lst500 = [randint(-100, 100) for _ in range(2*m3+1)]    # список из 1001 элемента

print(lst5)
print(statistics.median(lst5))

print(
    timeit(
        "statistics.median(lst5)",
        globals=globals(),
        number=100))

print(
    timeit(
        "statistics.median(lst50)",
        globals=globals(),
        number=100))

print(
    timeit(
        "statistics.median(lst500)",
        globals=globals(),
        number=100))


'''
0.00012019999999998698
0.000765700000000008
0.020306400000000002
Выводы:
Самый быстрый способ - через встроенную функцию
На втором месте про производиельности - через сортировку Шелла или Кучей
Самые медленные способы - Гномья сортировка и нахождение медианы без сортировки через циклы
'''