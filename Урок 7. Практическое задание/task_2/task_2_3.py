"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randint
from timeit import timeit
from statistics import median


def median_function(lst):
    return median(lst[:])


m = 10
orig_list = [randint(0, 100) for i in range(2 * m + 1)]
print(timeit("median_function(orig_list[:])", globals=globals(), number=100))

m = 100
orig_list_2 = [randint(0, 100) for j in range(2 * m + 1)]
print(timeit("median_function(orig_list_2[:])", globals=globals(), number=100))

m = 1000
orig_list_3 = [randint(0, 100) for k in range(2 * m + 1)]
print(timeit("median_function(orig_list_3[:])", globals=globals(), number=100))

#  0.00014990000636316836
#  0.001220100006321445
#  0.020969600009266287

#  Самым эффективным способом нахождения медианы, оказался способ номер три, с помощью встроенной функции
#  поиска медианы. На втором месте с помощью сортировки Шелла. Самый долгий тспособ без сортировки, при чем время
#  её выполнения значительно больше при большем количестве элеметов. Во всех других замерах,
#  скорость выполнения меньше секунды.
