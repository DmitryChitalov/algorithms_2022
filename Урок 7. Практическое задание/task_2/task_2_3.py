"""
Задание 2. Массив размером 2m + 1, где m – натуральное число,
заполнен случайным образом. Найдите в массиве медиану.

Медианой называется элемент ряда, делящий его на
две равные по длине части:
в одной находятся элементы,
которые не меньше медианы,
в другой – не больше медианы.

Решите задачу тремя способами:

3) с помощью встроенной функции поиска медианы

сделайте замеры на массивах длиной 10, 100, 1000 элементов

В конце сделайте аналитику какой трех из способов оказался эффективнее
"""
from random import randint
from timeit import timeit
import statistics


def fn_median(data):
    return statistics.median(data)


def run_def(s):
    a, b = 0, 1000
    s = m * 2 + 1
    data = [randint(a, b) for _ in range(s)]
    median_my = fn_median(data)
    # print(f' median  {median_my}')


m = 5
print(timeit('run_def(m)', globals=globals(), number=100))
m = 50
print(timeit('run_def(m)', globals=globals(), number=100))
m = 500
print(timeit('run_def(m)', globals=globals(), number=100))
# 0.0008442000253126025
# 0.006669400027021766
# 0.07615009997971356

''' 
Самая медленный поиск медианны - через гномью сортировку. Далее поиск через цикл в цикле. Оба метода О(N**2)
Встроенный метод поиска самый быстрый. O(NlogN)
'''
